// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customers.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfoRequest) Reset()         { *m = ServerInfoRequest{} }
func (m *ServerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ServerInfoRequest) ProtoMessage()    {}
func (*ServerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{0}
}

func (m *ServerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfoRequest.Unmarshal(m, b)
}
func (m *ServerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfoRequest.Marshal(b, m, deterministic)
}
func (m *ServerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfoRequest.Merge(m, src)
}
func (m *ServerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ServerInfoRequest.Size(m)
}
func (m *ServerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfoRequest proto.InternalMessageInfo

type ServerInfoResponse struct {
	// int64 time = 1; // current timestamp (ms)
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfoResponse) Reset()         { *m = ServerInfoResponse{} }
func (m *ServerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ServerInfoResponse) ProtoMessage()    {}
func (*ServerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{1}
}

func (m *ServerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfoResponse.Unmarshal(m, b)
}
func (m *ServerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfoResponse.Marshal(b, m, deterministic)
}
func (m *ServerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfoResponse.Merge(m, src)
}
func (m *ServerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ServerInfoResponse.Size(m)
}
func (m *ServerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfoResponse proto.InternalMessageInfo

func (m *ServerInfoResponse) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type Verification struct {
	Errors               []string `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	Notify               []string `protobuf:"bytes,2,rep,name=notify,proto3" json:"notify,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Verification) Reset()         { *m = Verification{} }
func (m *Verification) String() string { return proto.CompactTextString(m) }
func (*Verification) ProtoMessage()    {}
func (*Verification) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{2}
}

func (m *Verification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Verification.Unmarshal(m, b)
}
func (m *Verification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Verification.Marshal(b, m, deterministic)
}
func (m *Verification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Verification.Merge(m, src)
}
func (m *Verification) XXX_Size() int {
	return xxx_messageInfo_Verification.Size(m)
}
func (m *Verification) XXX_DiscardUnknown() {
	xxx_messageInfo_Verification.DiscardUnknown(m)
}

var xxx_messageInfo_Verification proto.InternalMessageInfo

func (m *Verification) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Verification) GetNotify() []string {
	if m != nil {
		return m.Notify
	}
	return nil
}

// USAGE details
type LicenseUser struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Prod                 string    `protobuf:"bytes,2,opt,name=prod,proto3" json:"prod,omitempty"`
	User                 *ObjectId `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	IssuedAt             int64     `protobuf:"varint,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt            int64     `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LicenseUser) Reset()         { *m = LicenseUser{} }
func (m *LicenseUser) String() string { return proto.CompactTextString(m) }
func (*LicenseUser) ProtoMessage()    {}
func (*LicenseUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{3}
}

func (m *LicenseUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseUser.Unmarshal(m, b)
}
func (m *LicenseUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseUser.Marshal(b, m, deterministic)
}
func (m *LicenseUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseUser.Merge(m, src)
}
func (m *LicenseUser) XXX_Size() int {
	return xxx_messageInfo_LicenseUser.Size(m)
}
func (m *LicenseUser) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseUser.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseUser proto.InternalMessageInfo

func (m *LicenseUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LicenseUser) GetProd() string {
	if m != nil {
		return m.Prod
	}
	return ""
}

func (m *LicenseUser) GetUser() *ObjectId {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *LicenseUser) GetIssuedAt() int64 {
	if m != nil {
		return m.IssuedAt
	}
	return 0
}

func (m *LicenseUser) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type LicenseV1 struct {
	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NotBefore int64    `protobuf:"varint,2,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter  int64    `protobuf:"varint,3,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	Product   string   `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	Scope     []string `protobuf:"bytes,5,rep,name=scope,proto3" json:"scope,omitempty"`
	Limit     int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	// operational attributes ...
	// remain = limit - len(users)
	Remain               int32          `protobuf:"varint,7,opt,name=remain,proto3" json:"remain,omitempty"`
	Users                []*LicenseUser `protobuf:"bytes,8,rep,name=users,proto3" json:"users,omitempty"`
	Status               *Verification  `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LicenseV1) Reset()         { *m = LicenseV1{} }
func (m *LicenseV1) String() string { return proto.CompactTextString(m) }
func (*LicenseV1) ProtoMessage()    {}
func (*LicenseV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{4}
}

func (m *LicenseV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseV1.Unmarshal(m, b)
}
func (m *LicenseV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseV1.Marshal(b, m, deterministic)
}
func (m *LicenseV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseV1.Merge(m, src)
}
func (m *LicenseV1) XXX_Size() int {
	return xxx_messageInfo_LicenseV1.Size(m)
}
func (m *LicenseV1) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseV1.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseV1 proto.InternalMessageInfo

func (m *LicenseV1) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LicenseV1) GetNotBefore() int64 {
	if m != nil {
		return m.NotBefore
	}
	return 0
}

func (m *LicenseV1) GetNotAfter() int64 {
	if m != nil {
		return m.NotAfter
	}
	return 0
}

func (m *LicenseV1) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *LicenseV1) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *LicenseV1) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *LicenseV1) GetRemain() int32 {
	if m != nil {
		return m.Remain
	}
	return 0
}

func (m *LicenseV1) GetUsers() []*LicenseUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *LicenseV1) GetStatus() *Verification {
	if m != nil {
		return m.Status
	}
	return nil
}

type Customer struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// string version = 2; // version
	// local store details
	CreatedAt int64 `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RevokedAt int64 `protobuf:"varint,4,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	// registration name
	Organization string `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`
	// validity boundaries
	IssuedAt  int64 `protobuf:"varint,6,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	NotBefore int64 `protobuf:"varint,7,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter  int64 `protobuf:"varint,8,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	// signature validity
	ThisUpdate int64 `protobuf:"varint,9,opt,name=this_update,json=thisUpdate,proto3" json:"this_update,omitempty"`
	NextUpdate int64 `protobuf:"varint,10,opt,name=next_update,json=nextUpdate,proto3" json:"next_update,omitempty"`
	// Verification status
	Verify *Verification `protobuf:"bytes,11,opt,name=verify,proto3" json:"verify,omitempty"`
	// extensions granted
	Limit                map[string]int32 `protobuf:"bytes,12,rep,name=limit,proto3" json:"limit,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Competitive          int32            `protobuf:"varint,13,opt,name=competitive,proto3" json:"competitive,omitempty"`
	License              []*LicenseV1     `protobuf:"bytes,14,rep,name=license,proto3" json:"license,omitempty"`
	Dnsrv                []*ObjectId      `protobuf:"bytes,15,rep,name=dnsrv,proto3" json:"dnsrv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{5}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Customer) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Customer) GetRevokedAt() int64 {
	if m != nil {
		return m.RevokedAt
	}
	return 0
}

func (m *Customer) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Customer) GetIssuedAt() int64 {
	if m != nil {
		return m.IssuedAt
	}
	return 0
}

func (m *Customer) GetNotBefore() int64 {
	if m != nil {
		return m.NotBefore
	}
	return 0
}

func (m *Customer) GetNotAfter() int64 {
	if m != nil {
		return m.NotAfter
	}
	return 0
}

func (m *Customer) GetThisUpdate() int64 {
	if m != nil {
		return m.ThisUpdate
	}
	return 0
}

func (m *Customer) GetNextUpdate() int64 {
	if m != nil {
		return m.NextUpdate
	}
	return 0
}

func (m *Customer) GetVerify() *Verification {
	if m != nil {
		return m.Verify
	}
	return nil
}

func (m *Customer) GetLimit() map[string]int32 {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Customer) GetCompetitive() int32 {
	if m != nil {
		return m.Competitive
	}
	return 0
}

func (m *Customer) GetLicense() []*LicenseV1 {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Customer) GetDnsrv() []*ObjectId {
	if m != nil {
		return m.Dnsrv
	}
	return nil
}

// GET /users/{user.id}/license
// GET /domains/{domain.id}/license
// GET /license/{filter=**}
type LicenseUsageRequest struct {
	// Available Filters
	User       *ObjectId `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Domain     *ObjectId `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	CustomerId string    `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Serial     []string  `protobuf:"bytes,4,rep,name=serial,proto3" json:"serial,omitempty"`
	Product    []string  `protobuf:"bytes,5,rep,name=product,proto3" json:"product,omitempty"`
	Valid      bool      `protobuf:"varint,6,opt,name=valid,proto3" json:"valid,omitempty"`
	// Request Controls
	Fields               []string `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort                 []string `protobuf:"bytes,11,rep,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LicenseUsageRequest) Reset()         { *m = LicenseUsageRequest{} }
func (m *LicenseUsageRequest) String() string { return proto.CompactTextString(m) }
func (*LicenseUsageRequest) ProtoMessage()    {}
func (*LicenseUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{6}
}

func (m *LicenseUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseUsageRequest.Unmarshal(m, b)
}
func (m *LicenseUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseUsageRequest.Marshal(b, m, deterministic)
}
func (m *LicenseUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseUsageRequest.Merge(m, src)
}
func (m *LicenseUsageRequest) XXX_Size() int {
	return xxx_messageInfo_LicenseUsageRequest.Size(m)
}
func (m *LicenseUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseUsageRequest proto.InternalMessageInfo

func (m *LicenseUsageRequest) GetUser() *ObjectId {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *LicenseUsageRequest) GetDomain() *ObjectId {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *LicenseUsageRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *LicenseUsageRequest) GetSerial() []string {
	if m != nil {
		return m.Serial
	}
	return nil
}

func (m *LicenseUsageRequest) GetProduct() []string {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *LicenseUsageRequest) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *LicenseUsageRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *LicenseUsageRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type LicenseUsageResponse struct {
	// repeated customer = 1; // detailed
	License              []*LicenseV1 `protobuf:"bytes,1,rep,name=license,proto3" json:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LicenseUsageResponse) Reset()         { *m = LicenseUsageResponse{} }
func (m *LicenseUsageResponse) String() string { return proto.CompactTextString(m) }
func (*LicenseUsageResponse) ProtoMessage()    {}
func (*LicenseUsageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{7}
}

func (m *LicenseUsageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicenseUsageResponse.Unmarshal(m, b)
}
func (m *LicenseUsageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicenseUsageResponse.Marshal(b, m, deterministic)
}
func (m *LicenseUsageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicenseUsageResponse.Merge(m, src)
}
func (m *LicenseUsageResponse) XXX_Size() int {
	return xxx_messageInfo_LicenseUsageResponse.Size(m)
}
func (m *LicenseUsageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LicenseUsageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LicenseUsageResponse proto.InternalMessageInfo

func (m *LicenseUsageResponse) GetLicense() []*LicenseV1 {
	if m != nil {
		return m.License
	}
	return nil
}

// GET /customer:sessionCustomer
// GET /customers/{id}
type GetCustomerRequest struct {
	// Available Filters
	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Valid  bool      `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	Domain *ObjectId `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Request Controls
	Fields               []string `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort                 []string `protobuf:"bytes,11,rep,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerRequest) Reset()         { *m = GetCustomerRequest{} }
func (m *GetCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerRequest) ProtoMessage()    {}
func (*GetCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{8}
}

func (m *GetCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerRequest.Unmarshal(m, b)
}
func (m *GetCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerRequest.Merge(m, src)
}
func (m *GetCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerRequest.Size(m)
}
func (m *GetCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerRequest proto.InternalMessageInfo

func (m *GetCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetCustomerRequest) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *GetCustomerRequest) GetDomain() *ObjectId {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *GetCustomerRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *GetCustomerRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type GetCustomerResponse struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetCustomerResponse) Reset()         { *m = GetCustomerResponse{} }
func (m *GetCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*GetCustomerResponse) ProtoMessage()    {}
func (*GetCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{9}
}

func (m *GetCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerResponse.Unmarshal(m, b)
}
func (m *GetCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerResponse.Marshal(b, m, deterministic)
}
func (m *GetCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerResponse.Merge(m, src)
}
func (m *GetCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_GetCustomerResponse.Size(m)
}
func (m *GetCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerResponse proto.InternalMessageInfo

func (m *GetCustomerResponse) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

// PUT /customer
type UpdateCustomerRequest struct {
	Organization         string   `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	LogoPicture          []byte   `protobuf:"bytes,2,opt,name=logo_picture,json=logoPicture,proto3" json:"logo_picture,omitempty"`
	Certificate          []byte   `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Revoke               bool     `protobuf:"varint,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCustomerRequest) Reset()         { *m = UpdateCustomerRequest{} }
func (m *UpdateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerRequest) ProtoMessage()    {}
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{10}
}

func (m *UpdateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerRequest.Merge(m, src)
}
func (m *UpdateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerRequest.Size(m)
}
func (m *UpdateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerRequest proto.InternalMessageInfo

func (m *UpdateCustomerRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *UpdateCustomerRequest) GetLogoPicture() []byte {
	if m != nil {
		return m.LogoPicture
	}
	return nil
}

func (m *UpdateCustomerRequest) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *UpdateCustomerRequest) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

type UpdateCustomerResponse struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateCustomerResponse) Reset()         { *m = UpdateCustomerResponse{} }
func (m *UpdateCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerResponse) ProtoMessage()    {}
func (*UpdateCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8869719da4d4f36a, []int{11}
}

func (m *UpdateCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerResponse.Unmarshal(m, b)
}
func (m *UpdateCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerResponse.Merge(m, src)
}
func (m *UpdateCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerResponse.Size(m)
}
func (m *UpdateCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerResponse proto.InternalMessageInfo

func (m *UpdateCustomerResponse) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerInfoRequest)(nil), "api.ServerInfoRequest")
	proto.RegisterType((*ServerInfoResponse)(nil), "api.ServerInfoResponse")
	proto.RegisterType((*Verification)(nil), "api.Verification")
	proto.RegisterType((*LicenseUser)(nil), "api.LicenseUser")
	proto.RegisterType((*LicenseV1)(nil), "api.LicenseV1")
	proto.RegisterType((*Customer)(nil), "api.Customer")
	proto.RegisterMapType((map[string]int32)(nil), "api.Customer.LimitEntry")
	proto.RegisterType((*LicenseUsageRequest)(nil), "api.LicenseUsageRequest")
	proto.RegisterType((*LicenseUsageResponse)(nil), "api.LicenseUsageResponse")
	proto.RegisterType((*GetCustomerRequest)(nil), "api.GetCustomerRequest")
	proto.RegisterType((*GetCustomerResponse)(nil), "api.GetCustomerResponse")
	proto.RegisterType((*UpdateCustomerRequest)(nil), "api.UpdateCustomerRequest")
	proto.RegisterType((*UpdateCustomerResponse)(nil), "api.UpdateCustomerResponse")
}

func init() { proto.RegisterFile("customers.proto", fileDescriptor_8869719da4d4f36a) }

var fileDescriptor_8869719da4d4f36a = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0x49, 0x49, 0x16, 0x87, 0x8c, 0x93, 0xac, 0x53, 0x77, 0xab, 0x20, 0xa8, 0xc2, 0xa2,
	0x81, 0x7c, 0x11, 0x10, 0xf7, 0x12, 0xf4, 0xd0, 0xd6, 0x09, 0x82, 0xc2, 0x68, 0x80, 0x16, 0x5b,
	0xc4, 0x57, 0x81, 0x26, 0x57, 0xee, 0x36, 0x32, 0x97, 0xdd, 0x5d, 0x0a, 0x71, 0x9f, 0xa0, 0x97,
	0x02, 0x3d, 0xf6, 0x01, 0xfa, 0x18, 0x7d, 0xac, 0x3e, 0x40, 0xb0, 0xb3, 0x4b, 0x89, 0xfa, 0x89,
	0x01, 0xdf, 0x38, 0xdf, 0x8c, 0x96, 0xb3, 0xdf, 0x37, 0xdf, 0x50, 0x70, 0xbf, 0x68, 0xb4, 0x91,
	0xd7, 0x5c, 0xe9, 0x69, 0xad, 0xa4, 0x91, 0x24, 0xca, 0x6b, 0x31, 0x8a, 0xa5, 0x28, 0x5d, 0x9c,
	0x1d, 0xc1, 0xc3, 0x5f, 0xb8, 0x5a, 0x72, 0x75, 0x5e, 0xcd, 0x25, 0xe3, 0xbf, 0x37, 0x5c, 0x9b,
	0xec, 0x19, 0x90, 0x2e, 0xa8, 0x6b, 0x59, 0x69, 0x4e, 0x1e, 0x40, 0xf4, 0x8e, 0xdf, 0xd0, 0x60,
	0x1c, 0x4c, 0x52, 0x66, 0x1f, 0xb3, 0x6f, 0x21, 0xbd, 0xe0, 0x4a, 0xcc, 0x45, 0x91, 0x1b, 0x21,
	0x2b, 0x72, 0x0c, 0x03, 0xae, 0x94, 0x54, 0x9a, 0x06, 0xe3, 0x68, 0x12, 0x33, 0x1f, 0x59, 0xbc,
	0x92, 0x46, 0xcc, 0x6f, 0x68, 0xe8, 0x70, 0x17, 0x65, 0x7f, 0x07, 0x90, 0xbc, 0x11, 0x05, 0xaf,
	0x34, 0x7f, 0xab, 0xb9, 0x22, 0x87, 0x10, 0x8a, 0x12, 0x5f, 0x10, 0xb3, 0x50, 0x94, 0x84, 0x40,
	0xaf, 0x56, 0xb2, 0xa4, 0x21, 0x22, 0xf8, 0x4c, 0x9e, 0x42, 0xaf, 0xd1, 0x5c, 0xd1, 0x68, 0x1c,
	0x4c, 0x92, 0xd3, 0x7b, 0xd3, 0xbc, 0x16, 0xd3, 0x9f, 0x2e, 0x7f, 0xe3, 0x85, 0x39, 0x2f, 0x19,
	0xa6, 0xc8, 0x63, 0x88, 0x85, 0xd6, 0x0d, 0x2f, 0x67, 0xb9, 0xa1, 0xbd, 0x71, 0x30, 0x89, 0xd8,
	0xd0, 0x01, 0x67, 0x86, 0x3c, 0x01, 0xe0, 0xef, 0x6b, 0xa1, 0xb8, 0xb6, 0xd9, 0x3e, 0x66, 0x63,
	0x8f, 0x9c, 0x99, 0xec, 0xcf, 0x10, 0x62, 0xdf, 0xd2, 0xc5, 0xf3, 0x9d, 0x86, 0x9e, 0x00, 0x54,
	0xd2, 0xcc, 0x2e, 0xf9, 0x5c, 0x2a, 0x8e, 0x6d, 0x45, 0x2c, 0xae, 0xa4, 0x79, 0x89, 0x80, 0x7d,
	0xb1, 0x4d, 0xe7, 0x73, 0xe3, 0x1b, 0x8c, 0xd8, 0xb0, 0x92, 0xe6, 0xcc, 0xc6, 0x84, 0xc2, 0x81,
	0xbd, 0x40, 0x53, 0xb8, 0x9e, 0x62, 0xd6, 0x86, 0xe4, 0x11, 0xf4, 0x75, 0x21, 0x6b, 0x4e, 0xfb,
	0xc8, 0x8e, 0x0b, 0x2c, 0xba, 0x10, 0xd7, 0xc2, 0xd0, 0xc1, 0x38, 0x98, 0xf4, 0x99, 0x0b, 0x2c,
	0x95, 0x8a, 0x5f, 0xe7, 0xa2, 0xa2, 0x07, 0x08, 0xfb, 0x88, 0x3c, 0x83, 0xbe, 0xbd, 0xbb, 0xa6,
	0xc3, 0x71, 0x34, 0x49, 0x4e, 0x1f, 0x20, 0x2f, 0x1d, 0x6e, 0x99, 0x4b, 0x93, 0x13, 0x18, 0x68,
	0x93, 0x9b, 0x46, 0xd3, 0x18, 0x09, 0x7c, 0x88, 0x85, 0x5d, 0x15, 0x99, 0x2f, 0xc8, 0xfe, 0xeb,
	0xc1, 0xf0, 0x95, 0x1f, 0x9f, 0x7d, 0x4c, 0x14, 0x8a, 0xe7, 0xc6, 0x91, 0xec, 0x99, 0xf0, 0x88,
	0x63, 0xb9, 0xa9, 0xcb, 0x36, 0xed, 0xa8, 0x88, 0x3d, 0xe2, 0xd2, 0x8a, 0x2f, 0xe5, 0xbb, 0xae,
	0x44, 0xb1, 0x47, 0xce, 0x0c, 0xc9, 0x20, 0x95, 0xea, 0x2a, 0xaf, 0xc4, 0x1f, 0xd8, 0x11, 0xaa,
	0x14, 0xb3, 0x0d, 0x6c, 0x53, 0xe4, 0xc1, 0xae, 0xc8, 0x1d, 0x9d, 0x0e, 0x6e, 0xd5, 0x69, 0xb8,
	0xa5, 0xd3, 0x17, 0x90, 0x98, 0x5f, 0x85, 0x9e, 0xb9, 0x6e, 0x91, 0xa6, 0x88, 0x81, 0x85, 0xde,
	0x22, 0x62, 0x0b, 0x2a, 0xfe, 0xde, 0xb4, 0x05, 0xe0, 0x0a, 0x2c, 0xe4, 0x0b, 0x4e, 0x60, 0xb0,
	0xb4, 0x84, 0xde, 0xd0, 0xe4, 0xa3, 0x1c, 0xbb, 0x02, 0x32, 0x6d, 0x45, 0x4e, 0x51, 0x36, 0x8a,
	0x95, 0x2d, 0xe9, 0xd3, 0x37, 0x36, 0xf5, 0xba, 0x32, 0xea, 0xa6, 0x95, 0x7f, 0x0c, 0x49, 0x21,
	0xaf, 0x6b, 0x6e, 0x84, 0x11, 0x4b, 0x4e, 0xef, 0xe1, 0x0c, 0x74, 0x21, 0x32, 0x81, 0x83, 0x85,
	0x93, 0x9d, 0x1e, 0xe2, 0x99, 0x87, 0xdd, 0x51, 0xb8, 0x78, 0xce, 0xda, 0x34, 0xf9, 0x12, 0xfa,
	0x65, 0xa5, 0xd5, 0x92, 0xde, 0xc7, 0xba, 0x2d, 0x2b, 0xb9, 0xdc, 0xe8, 0x05, 0xc0, 0xba, 0x8b,
	0xee, 0x0a, 0x88, 0x71, 0x05, 0xd8, 0x29, 0x5d, 0xe6, 0x8b, 0xc6, 0x99, 0xa1, 0xcf, 0x5c, 0xf0,
	0x4d, 0xf8, 0x22, 0xc8, 0xfe, 0x0f, 0xe0, 0x68, 0x35, 0x80, 0xf9, 0x15, 0xf7, 0xcb, 0x65, 0x65,
	0xe0, 0xe0, 0xe3, 0x06, 0xfe, 0x0a, 0x06, 0xa5, 0xc4, 0x21, 0x0f, 0xf7, 0x15, 0xf9, 0xa4, 0x15,
	0xa2, 0x5d, 0x6f, 0x33, 0x51, 0xe2, 0x94, 0xc5, 0x0c, 0x5a, 0xe8, 0xbc, 0xb4, 0x66, 0xd1, 0x5c,
	0x89, 0x7c, 0x41, 0x7b, 0x6e, 0xef, 0xb8, 0xa8, 0x6b, 0x45, 0x67, 0xb9, 0xae, 0x15, 0x97, 0xf9,
	0x42, 0x94, 0x38, 0x51, 0x43, 0xe6, 0x02, 0x7b, 0xce, 0x5c, 0xf0, 0x45, 0xa9, 0x29, 0xb8, 0x73,
	0x5c, 0x64, 0xf7, 0x93, 0x96, 0xca, 0xd0, 0x04, 0x51, 0x7c, 0xce, 0xbe, 0x87, 0x47, 0x9b, 0xb7,
	0xf6, 0xdb, 0xb3, 0xa3, 0x4b, 0x70, 0xab, 0x2e, 0xd9, 0x5f, 0x01, 0x90, 0x1f, 0xb8, 0x69, 0xa7,
	0xa0, 0xe5, 0x6d, 0xdb, 0x81, 0xab, 0x56, 0xc3, 0x6e, 0xab, 0x6b, 0xea, 0xa2, 0xdb, 0xa8, 0xbb,
	0xdb, 0x8d, 0x8e, 0x36, 0xda, 0xf1, 0x17, 0x3a, 0x81, 0x61, 0x4b, 0xf5, 0x86, 0x96, 0xab, 0xc2,
	0x55, 0x3a, 0xfb, 0x27, 0x80, 0x4f, 0x9d, 0x37, 0xb6, 0x2f, 0xb5, 0xed, 0xf4, 0x60, 0x8f, 0xd3,
	0x9f, 0x42, 0xba, 0x90, 0x57, 0x72, 0x56, 0x8b, 0xc2, 0x34, 0x7e, 0xed, 0xa6, 0x2c, 0xb1, 0xd8,
	0xcf, 0x0e, 0x42, 0x5b, 0x70, 0x65, 0x9c, 0xbf, 0x38, 0x5e, 0x3d, 0x65, 0x5d, 0xc8, 0xed, 0x4d,
	0xbb, 0x5f, 0x70, 0xdb, 0x0c, 0x99, 0x8f, 0xb2, 0x57, 0x70, 0xbc, 0xdd, 0xd9, 0x9d, 0xef, 0x77,
	0xfa, 0x6f, 0x08, 0x71, 0x0b, 0x6b, 0xf2, 0x1d, 0xc0, 0xfa, 0xeb, 0x49, 0x8e, 0xf1, 0x47, 0x3b,
	0xdf, 0xd8, 0xd1, 0x67, 0x3b, 0xb8, 0x7b, 0x6f, 0xf6, 0x09, 0x79, 0x09, 0x49, 0x87, 0x70, 0xe2,
	0x2a, 0x77, 0x27, 0x62, 0x44, 0x77, 0x13, 0xab, 0x33, 0x7e, 0x84, 0xc3, 0xcd, 0x7b, 0x91, 0x11,
	0x56, 0xef, 0x95, 0x61, 0xf4, 0x78, 0x6f, 0x6e, 0x75, 0xd8, 0x6b, 0x48, 0xbb, 0x33, 0x4d, 0xe8,
	0xe6, 0xd7, 0x65, 0x6d, 0xee, 0xd1, 0xe7, 0x7b, 0x32, 0xed, 0x31, 0x97, 0x03, 0xfc, 0xcb, 0xf1,
	0xf5, 0x87, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xf0, 0x23, 0x39, 0x95, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomersClient is the client API for Customers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomersClient interface {
	ServerInfo(ctx context.Context, in *ServerInfoRequest, opts ...grpc.CallOption) (*ServerInfoResponse, error)
	// rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}
	GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*GetCustomerResponse, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*UpdateCustomerResponse, error)
	LicenseUsage(ctx context.Context, in *LicenseUsageRequest, opts ...grpc.CallOption) (*LicenseUsageResponse, error)
}

type customersClient struct {
	cc *grpc.ClientConn
}

func NewCustomersClient(cc *grpc.ClientConn) CustomersClient {
	return &customersClient{cc}
}

func (c *customersClient) ServerInfo(ctx context.Context, in *ServerInfoRequest, opts ...grpc.CallOption) (*ServerInfoResponse, error) {
	out := new(ServerInfoResponse)
	err := c.cc.Invoke(ctx, "/api.Customers/ServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*GetCustomerResponse, error) {
	out := new(GetCustomerResponse)
	err := c.cc.Invoke(ctx, "/api.Customers/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*UpdateCustomerResponse, error) {
	out := new(UpdateCustomerResponse)
	err := c.cc.Invoke(ctx, "/api.Customers/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) LicenseUsage(ctx context.Context, in *LicenseUsageRequest, opts ...grpc.CallOption) (*LicenseUsageResponse, error) {
	out := new(LicenseUsageResponse)
	err := c.cc.Invoke(ctx, "/api.Customers/LicenseUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomersServer is the server API for Customers service.
type CustomersServer interface {
	ServerInfo(context.Context, *ServerInfoRequest) (*ServerInfoResponse, error)
	// rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}
	GetCustomer(context.Context, *GetCustomerRequest) (*GetCustomerResponse, error)
	UpdateCustomer(context.Context, *UpdateCustomerRequest) (*UpdateCustomerResponse, error)
	LicenseUsage(context.Context, *LicenseUsageRequest) (*LicenseUsageResponse, error)
}

// UnimplementedCustomersServer can be embedded to have forward compatible implementations.
type UnimplementedCustomersServer struct {
}

func (*UnimplementedCustomersServer) ServerInfo(ctx context.Context, req *ServerInfoRequest) (*ServerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerInfo not implemented")
}
func (*UnimplementedCustomersServer) GetCustomer(ctx context.Context, req *GetCustomerRequest) (*GetCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (*UnimplementedCustomersServer) UpdateCustomer(ctx context.Context, req *UpdateCustomerRequest) (*UpdateCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedCustomersServer) LicenseUsage(ctx context.Context, req *LicenseUsageRequest) (*LicenseUsageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LicenseUsage not implemented")
}

func RegisterCustomersServer(s *grpc.Server, srv CustomersServer) {
	s.RegisterService(&_Customers_serviceDesc, srv)
}

func _Customers_ServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).ServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Customers/ServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).ServerInfo(ctx, req.(*ServerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Customers/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).GetCustomer(ctx, req.(*GetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Customers/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).UpdateCustomer(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_LicenseUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LicenseUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).LicenseUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Customers/LicenseUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).LicenseUsage(ctx, req.(*LicenseUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Customers",
	HandlerType: (*CustomersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServerInfo",
			Handler:    _Customers_ServerInfo_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _Customers_GetCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _Customers_UpdateCustomer_Handler,
		},
		{
			MethodName: "LicenseUsage",
			Handler:    _Customers_LicenseUsage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customers.proto",
}
