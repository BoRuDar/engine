// Code generated by protoc-gen-go. DO NOT EDIT.
// source: outbound_resource.proto

package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OutboundResource struct {
	Id                    int64             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId              int64             `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	CreatedAt             int64             `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CreatedBy             *Lookup           `protobuf:"bytes,4,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	UpdatedAt             int64             `protobuf:"varint,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UpdatedBy             *Lookup           `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	Limit                 int32             `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Enabled               bool              `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	Rps                   int32             `protobuf:"varint,9,opt,name=rps" json:"rps,omitempty"`
	Reserve               bool              `protobuf:"varint,10,opt,name=reserve" json:"reserve,omitempty"`
	Variables             map[string]string `protobuf:"bytes,11,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Number                string            `protobuf:"bytes,12,opt,name=number" json:"number,omitempty"`
	MaxSuccessivelyErrors int32             `protobuf:"varint,13,opt,name=max_successively_errors,json=maxSuccessivelyErrors" json:"max_successively_errors,omitempty"`
	Name                  string            `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	DialString            string            `protobuf:"bytes,15,opt,name=dial_string,json=dialString" json:"dial_string,omitempty"`
	ErrorIds              []string          `protobuf:"bytes,16,rep,name=error_ids,json=errorIds" json:"error_ids,omitempty"`
	LastErrorId           string            `protobuf:"bytes,17,opt,name=last_error_id,json=lastErrorId" json:"last_error_id,omitempty"`
	SuccessivelyErrors    int32             `protobuf:"varint,18,opt,name=successively_errors,json=successivelyErrors" json:"successively_errors,omitempty"`
	LastErrorAt           int64             `protobuf:"varint,19,opt,name=last_error_at,json=lastErrorAt" json:"last_error_at,omitempty"`
}

func (m *OutboundResource) Reset()                    { *m = OutboundResource{} }
func (m *OutboundResource) String() string            { return proto.CompactTextString(m) }
func (*OutboundResource) ProtoMessage()               {}
func (*OutboundResource) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *OutboundResource) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OutboundResource) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *OutboundResource) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *OutboundResource) GetCreatedBy() *Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *OutboundResource) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *OutboundResource) GetUpdatedBy() *Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *OutboundResource) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OutboundResource) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *OutboundResource) GetRps() int32 {
	if m != nil {
		return m.Rps
	}
	return 0
}

func (m *OutboundResource) GetReserve() bool {
	if m != nil {
		return m.Reserve
	}
	return false
}

func (m *OutboundResource) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *OutboundResource) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *OutboundResource) GetMaxSuccessivelyErrors() int32 {
	if m != nil {
		return m.MaxSuccessivelyErrors
	}
	return 0
}

func (m *OutboundResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OutboundResource) GetDialString() string {
	if m != nil {
		return m.DialString
	}
	return ""
}

func (m *OutboundResource) GetErrorIds() []string {
	if m != nil {
		return m.ErrorIds
	}
	return nil
}

func (m *OutboundResource) GetLastErrorId() string {
	if m != nil {
		return m.LastErrorId
	}
	return ""
}

func (m *OutboundResource) GetSuccessivelyErrors() int32 {
	if m != nil {
		return m.SuccessivelyErrors
	}
	return 0
}

func (m *OutboundResource) GetLastErrorAt() int64 {
	if m != nil {
		return m.LastErrorAt
	}
	return 0
}

type ListOutboundResource struct {
	Items []*OutboundResource `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListOutboundResource) Reset()                    { *m = ListOutboundResource{} }
func (m *ListOutboundResource) String() string            { return proto.CompactTextString(m) }
func (*ListOutboundResource) ProtoMessage()               {}
func (*ListOutboundResource) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *ListOutboundResource) GetItems() []*OutboundResource {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*OutboundResource)(nil), "engine.OutboundResource")
	proto.RegisterType((*ListOutboundResource)(nil), "engine.ListOutboundResource")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OutboundResourceApi service

type OutboundResourceApiClient interface {
	// POST /call_center/resources
	Create(ctx context.Context, in *OutboundResource, opts ...grpc.CallOption) (*OutboundResource, error)
	// GET /call_center/resources
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListOutboundResource, error)
	// GET /call_center/resources/:ID
	Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*OutboundResource, error)
	// PUT /call_center/resources/:ID
	Update(ctx context.Context, in *OutboundResource, opts ...grpc.CallOption) (*OutboundResource, error)
	// DELETE /call_center/resources/:ID
	Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*OutboundResource, error)
}

type outboundResourceApiClient struct {
	cc *grpc.ClientConn
}

func NewOutboundResourceApiClient(cc *grpc.ClientConn) OutboundResourceApiClient {
	return &outboundResourceApiClient{cc}
}

func (c *outboundResourceApiClient) Create(ctx context.Context, in *OutboundResource, opts ...grpc.CallOption) (*OutboundResource, error) {
	out := new(OutboundResource)
	err := grpc.Invoke(ctx, "/engine.OutboundResourceApi/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceApiClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListOutboundResource, error) {
	out := new(ListOutboundResource)
	err := grpc.Invoke(ctx, "/engine.OutboundResourceApi/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceApiClient) Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*OutboundResource, error) {
	out := new(OutboundResource)
	err := grpc.Invoke(ctx, "/engine.OutboundResourceApi/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceApiClient) Update(ctx context.Context, in *OutboundResource, opts ...grpc.CallOption) (*OutboundResource, error) {
	out := new(OutboundResource)
	err := grpc.Invoke(ctx, "/engine.OutboundResourceApi/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceApiClient) Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*OutboundResource, error) {
	out := new(OutboundResource)
	err := grpc.Invoke(ctx, "/engine.OutboundResourceApi/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OutboundResourceApi service

type OutboundResourceApiServer interface {
	// POST /call_center/resources
	Create(context.Context, *OutboundResource) (*OutboundResource, error)
	// GET /call_center/resources
	List(context.Context, *ListRequest) (*ListOutboundResource, error)
	// GET /call_center/resources/:ID
	Get(context.Context, *ItemRequest) (*OutboundResource, error)
	// PUT /call_center/resources/:ID
	Update(context.Context, *OutboundResource) (*OutboundResource, error)
	// DELETE /call_center/resources/:ID
	Remove(context.Context, *ItemRequest) (*OutboundResource, error)
}

func RegisterOutboundResourceApiServer(s *grpc.Server, srv OutboundResourceApiServer) {
	s.RegisterService(&_OutboundResourceApi_serviceDesc, srv)
}

func _OutboundResourceApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OutboundResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.OutboundResourceApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceApiServer).Create(ctx, req.(*OutboundResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.OutboundResourceApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceApiServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.OutboundResourceApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceApiServer).Get(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OutboundResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.OutboundResourceApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceApiServer).Update(ctx, req.(*OutboundResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.OutboundResourceApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceApiServer).Remove(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OutboundResourceApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.OutboundResourceApi",
	HandlerType: (*OutboundResourceApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OutboundResourceApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _OutboundResourceApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _OutboundResourceApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OutboundResourceApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _OutboundResourceApi_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "outbound_resource.proto",
}

func init() { proto.RegisterFile("outbound_resource.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x35, 0x9b, 0x6e, 0xba, 0xb9, 0xb1, 0x6b, 0x9d, 0xad, 0x76, 0x58, 0x15, 0xc3, 0xbe, 0x98,
	0x17, 0x57, 0xa8, 0x50, 0xfc, 0xa2, 0xd0, 0xca, 0x2a, 0x85, 0x82, 0x30, 0x45, 0x5f, 0xc3, 0x64,
	0xe7, 0x52, 0x86, 0xe6, 0x63, 0x9d, 0x99, 0x2c, 0xcd, 0x0f, 0xf4, 0x37, 0xf8, 0x77, 0x24, 0x93,
	0xa4, 0xdd, 0xb6, 0xbb, 0x82, 0xbe, 0xcd, 0x3d, 0xe7, 0xdc, 0x33, 0x87, 0xb9, 0x37, 0x81, 0xfd,
	0xa2, 0x34, 0x49, 0x51, 0xe6, 0x22, 0x56, 0xa8, 0x8b, 0x52, 0xcd, 0x71, 0xba, 0x50, 0x85, 0x29,
	0x88, 0x87, 0xf9, 0x85, 0xcc, 0x71, 0x1c, 0xcc, 0x8b, 0x5c, 0x9b, 0x06, 0x9c, 0xfc, 0xee, 0xc3,
	0xee, 0xb7, 0xb6, 0x81, 0xb5, 0x7a, 0x32, 0x84, 0x9e, 0x14, 0xd4, 0x09, 0x9d, 0xc8, 0x65, 0x3d,
	0x29, 0xc8, 0x33, 0xf0, 0x45, 0x91, 0x71, 0x99, 0xc7, 0x52, 0xd0, 0x9e, 0x85, 0x07, 0x0d, 0x70,
	0x2a, 0xc8, 0x0b, 0x80, 0xb9, 0x42, 0x6e, 0x50, 0xc4, 0xdc, 0x50, 0xd7, 0xb2, 0x7e, 0x8b, 0x1c,
	0x1b, 0xf2, 0xfa, 0x86, 0x4e, 0x2a, 0xba, 0x15, 0x3a, 0x51, 0x70, 0x30, 0x9c, 0x36, 0x51, 0xa6,
	0x67, 0x45, 0x71, 0x59, 0x2e, 0xae, 0xe5, 0x27, 0x55, 0xed, 0x56, 0x2e, 0x44, 0xe7, 0xd6, 0x6f,
	0xdc, 0x5a, 0xa4, 0x71, 0xeb, 0xe8, 0xa4, 0xa2, 0xde, 0x7a, 0xb7, 0x56, 0x71, 0x52, 0x91, 0x3d,
	0xe8, 0xa7, 0x32, 0x93, 0x86, 0x6e, 0x87, 0x4e, 0xd4, 0x67, 0x4d, 0x41, 0x28, 0x6c, 0x63, 0xce,
	0x93, 0x14, 0x05, 0x1d, 0x84, 0x4e, 0x34, 0x60, 0x5d, 0x49, 0x76, 0xc1, 0x55, 0x0b, 0x4d, 0x7d,
	0xab, 0xae, 0x8f, 0xb5, 0x56, 0xa1, 0x46, 0xb5, 0x44, 0x0a, 0x8d, 0xb6, 0x2d, 0xc9, 0x0c, 0xfc,
	0x25, 0x57, 0xb2, 0x6e, 0xd4, 0x34, 0x08, 0xdd, 0x28, 0x38, 0x78, 0xd5, 0x25, 0xb9, 0xfb, 0xa2,
	0xd3, 0x1f, 0x9d, 0x72, 0x96, 0x1b, 0x55, 0xb1, 0x9b, 0x4e, 0xf2, 0x14, 0xbc, 0xbc, 0xcc, 0x12,
	0x54, 0xf4, 0x61, 0xe8, 0x44, 0x3e, 0x6b, 0x2b, 0x72, 0x08, 0xfb, 0x19, 0xbf, 0x8a, 0x75, 0x39,
	0x9f, 0xa3, 0xd6, 0x72, 0x89, 0x69, 0x15, 0xa3, 0x52, 0x85, 0xd2, 0x74, 0xc7, 0xc6, 0x7b, 0x92,
	0xf1, 0xab, 0xf3, 0x15, 0x76, 0x66, 0x49, 0x42, 0x60, 0x2b, 0xe7, 0x19, 0xd2, 0xa1, 0x75, 0xb3,
	0x67, 0xf2, 0x12, 0x02, 0x21, 0x79, 0x1a, 0x6b, 0xa3, 0x64, 0x7e, 0x41, 0x1f, 0x59, 0x0a, 0x6a,
	0xe8, 0xdc, 0x22, 0xf5, 0x80, 0xad, 0x77, 0x2c, 0x85, 0xa6, 0xbb, 0xa1, 0x1b, 0xf9, 0x6c, 0x60,
	0x81, 0x53, 0xa1, 0xc9, 0x04, 0x76, 0x52, 0xae, 0x4d, 0xdc, 0x29, 0xe8, 0x63, 0xdb, 0x1f, 0xd4,
	0xe0, 0xac, 0x11, 0x91, 0x37, 0x30, 0x5a, 0x97, 0x94, 0xd8, 0xa4, 0x44, 0xdf, 0x8f, 0x79, 0xdb,
	0x94, 0x1b, 0x3a, 0xb2, 0xa3, 0xbe, 0x31, 0x3d, 0x36, 0xe3, 0x4f, 0x30, 0xbc, 0xfd, 0x6e, 0xf5,
	0x7c, 0x2e, 0xb1, 0xb2, 0x9b, 0xe9, 0xb3, 0xfa, 0x58, 0x4f, 0x78, 0xc9, 0xd3, 0x12, 0xed, 0x5a,
	0xfa, 0xac, 0x29, 0x3e, 0xf4, 0xde, 0x39, 0x93, 0x2f, 0xb0, 0x77, 0x26, 0xb5, 0xb9, 0xb7, 0xdc,
	0x53, 0xe8, 0x4b, 0x83, 0x99, 0xa6, 0x8e, 0x9d, 0x19, 0xdd, 0x34, 0x33, 0xd6, 0xc8, 0x0e, 0x7e,
	0xf5, 0x60, 0x74, 0x97, 0x3b, 0x5e, 0x48, 0x72, 0x04, 0xde, 0x67, 0xbb, 0xb6, 0x64, 0xa3, 0xc5,
	0x78, 0x23, 0x33, 0x79, 0x40, 0x3e, 0xc2, 0x56, 0x9d, 0x8f, 0x8c, 0xae, 0xd7, 0x57, 0x6a, 0xc3,
	0xf0, 0x67, 0x89, 0xda, 0x8c, 0x9f, 0xaf, 0x82, 0x6b, 0x9a, 0x0f, 0xc1, 0xfd, 0x8a, 0x2b, 0xbd,
	0xa7, 0x06, 0xb3, 0xae, 0xf7, 0x6f, 0x97, 0x1e, 0x81, 0xf7, 0xdd, 0x7e, 0x1d, 0xff, 0x19, 0xfa,
	0x3d, 0x78, 0x0c, 0xb3, 0x62, 0x89, 0xff, 0x7c, 0x75, 0xe2, 0xd9, 0x1f, 0xce, 0xdb, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x72, 0x29, 0xcb, 0xee, 0xa0, 0x04, 0x00, 0x00,
}
