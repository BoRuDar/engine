// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supervisor_in_team.proto

package engine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SupervisorTeamItemReqeust struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId               int64    `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	DomainId             int64    `protobuf:"varint,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupervisorTeamItemReqeust) Reset()         { *m = SupervisorTeamItemReqeust{} }
func (m *SupervisorTeamItemReqeust) String() string { return proto.CompactTextString(m) }
func (*SupervisorTeamItemReqeust) ProtoMessage()    {}
func (*SupervisorTeamItemReqeust) Descriptor() ([]byte, []int) {
	return fileDescriptor_232fda82b39ce17f, []int{0}
}

func (m *SupervisorTeamItemReqeust) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupervisorTeamItemReqeust.Unmarshal(m, b)
}
func (m *SupervisorTeamItemReqeust) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupervisorTeamItemReqeust.Marshal(b, m, deterministic)
}
func (m *SupervisorTeamItemReqeust) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupervisorTeamItemReqeust.Merge(m, src)
}
func (m *SupervisorTeamItemReqeust) XXX_Size() int {
	return xxx_messageInfo_SupervisorTeamItemReqeust.Size(m)
}
func (m *SupervisorTeamItemReqeust) XXX_DiscardUnknown() {
	xxx_messageInfo_SupervisorTeamItemReqeust.DiscardUnknown(m)
}

var xxx_messageInfo_SupervisorTeamItemReqeust proto.InternalMessageInfo

func (m *SupervisorTeamItemReqeust) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SupervisorTeamItemReqeust) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *SupervisorTeamItemReqeust) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type SupervisorInTeam struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId               int64    `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	DomainId             int64    `protobuf:"varint,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Agent                *Lookup  `protobuf:"bytes,4,opt,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupervisorInTeam) Reset()         { *m = SupervisorInTeam{} }
func (m *SupervisorInTeam) String() string { return proto.CompactTextString(m) }
func (*SupervisorInTeam) ProtoMessage()    {}
func (*SupervisorInTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_232fda82b39ce17f, []int{1}
}

func (m *SupervisorInTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupervisorInTeam.Unmarshal(m, b)
}
func (m *SupervisorInTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupervisorInTeam.Marshal(b, m, deterministic)
}
func (m *SupervisorInTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupervisorInTeam.Merge(m, src)
}
func (m *SupervisorInTeam) XXX_Size() int {
	return xxx_messageInfo_SupervisorInTeam.Size(m)
}
func (m *SupervisorInTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_SupervisorInTeam.DiscardUnknown(m)
}

var xxx_messageInfo_SupervisorInTeam proto.InternalMessageInfo

func (m *SupervisorInTeam) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SupervisorInTeam) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *SupervisorInTeam) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *SupervisorInTeam) GetAgent() *Lookup {
	if m != nil {
		return m.Agent
	}
	return nil
}

type ListSupervisorInTeam struct {
	Items                []*SupervisorInTeam `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListSupervisorInTeam) Reset()         { *m = ListSupervisorInTeam{} }
func (m *ListSupervisorInTeam) String() string { return proto.CompactTextString(m) }
func (*ListSupervisorInTeam) ProtoMessage()    {}
func (*ListSupervisorInTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_232fda82b39ce17f, []int{2}
}

func (m *ListSupervisorInTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSupervisorInTeam.Unmarshal(m, b)
}
func (m *ListSupervisorInTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSupervisorInTeam.Marshal(b, m, deterministic)
}
func (m *ListSupervisorInTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSupervisorInTeam.Merge(m, src)
}
func (m *ListSupervisorInTeam) XXX_Size() int {
	return xxx_messageInfo_ListSupervisorInTeam.Size(m)
}
func (m *ListSupervisorInTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSupervisorInTeam.DiscardUnknown(m)
}

var xxx_messageInfo_ListSupervisorInTeam proto.InternalMessageInfo

func (m *ListSupervisorInTeam) GetItems() []*SupervisorInTeam {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*SupervisorTeamItemReqeust)(nil), "engine.SupervisorTeamItemReqeust")
	proto.RegisterType((*SupervisorInTeam)(nil), "engine.SupervisorInTeam")
	proto.RegisterType((*ListSupervisorInTeam)(nil), "engine.ListSupervisorInTeam")
}

func init() { proto.RegisterFile("supervisor_in_team.proto", fileDescriptor_232fda82b39ce17f) }

var fileDescriptor_232fda82b39ce17f = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0xdf, 0x24, 0xad, 0x5f, 0xb8, 0x4a, 0x15, 0x32, 0x48, 0x98, 0xc0, 0x50, 0x22, 0x86,
	0x4e, 0x19, 0xca, 0x5e, 0x89, 0x3f, 0x6a, 0x15, 0xa9, 0x53, 0x80, 0xb9, 0x32, 0xf8, 0x54, 0x59,
	0xc8, 0x76, 0x88, 0x2f, 0x1d, 0xf9, 0xbc, 0x7c, 0x0c, 0x94, 0x06, 0x0a, 0x4a, 0x29, 0x03, 0x30,
	0xfa, 0x7e, 0x77, 0xcf, 0xf3, 0x9c, 0xce, 0x20, 0x7c, 0x55, 0x60, 0xb9, 0xd4, 0xde, 0x95, 0x73,
	0x6d, 0xe7, 0x84, 0xd2, 0xa4, 0x45, 0xe9, 0xc8, 0x71, 0x86, 0x76, 0xa1, 0x2d, 0xc6, 0xbd, 0x07,
	0x67, 0x3d, 0x35, 0xc5, 0x44, 0xc2, 0xd1, 0xcd, 0x7a, 0xe0, 0x16, 0xa5, 0xc9, 0x08, 0x4d, 0x8e,
	0x4f, 0x58, 0x79, 0xe2, 0x7d, 0x08, 0xb5, 0x12, 0xc1, 0x20, 0x18, 0x46, 0x79, 0xa8, 0x15, 0x3f,
	0x84, 0xff, 0xb5, 0xde, 0x5c, 0x2b, 0x11, 0xae, 0x8a, 0xac, 0x7e, 0x66, 0x8a, 0x1f, 0xc3, 0xae,
	0x72, 0x46, 0x6a, 0x5b, 0xa3, 0x68, 0x85, 0x76, 0x9a, 0x42, 0xa6, 0x92, 0x67, 0xd8, 0xfb, 0xb0,
	0xc8, 0x6c, 0x6d, 0xf2, 0x37, 0xca, 0xfc, 0x0c, 0xba, 0x72, 0x81, 0x96, 0x44, 0x67, 0x10, 0x0c,
	0x7b, 0xa3, 0x7e, 0xda, 0x6c, 0x98, 0xce, 0x9c, 0x7b, 0xac, 0x8a, 0xbc, 0x81, 0xc9, 0x04, 0x0e,
	0x66, 0xda, 0xd3, 0x46, 0x86, 0x14, 0xba, 0x9a, 0xd0, 0x78, 0x11, 0x0c, 0xa2, 0x61, 0x6f, 0x24,
	0xde, 0xa7, 0xdb, 0x8d, 0x79, 0xd3, 0x36, 0x7a, 0x09, 0x61, 0xbf, 0xcd, 0x2e, 0x0a, 0xcd, 0xc7,
	0xc0, 0xae, 0x4a, 0x94, 0x84, 0x7c, 0xab, 0x44, 0xbc, 0x95, 0x24, 0xff, 0xf8, 0x25, 0x74, 0xea,
	0x7c, 0x3c, 0x5e, 0xc7, 0xd7, 0x9e, 0x26, 0xae, 0x7c, 0xbb, 0x44, 0x85, 0x9e, 0xe2, 0x93, 0xcf,
	0xec, 0x0b, 0x8d, 0x6b, 0x88, 0xa6, 0x48, 0xfc, 0x74, 0xd3, 0xa6, 0x75, 0xd3, 0x6f, 0x93, 0x8c,
	0x81, 0xdd, 0x15, 0xea, 0xe7, 0x9b, 0x4c, 0x81, 0xe5, 0x68, 0xdc, 0x12, 0x7f, 0x19, 0xe4, 0x9e,
	0xad, 0x3e, 0xe7, 0xf9, 0x6b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xd8, 0x88, 0x58, 0xcd, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SupervisorInTeamApiClient is the client API for SupervisorInTeamApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SupervisorInTeamApiClient interface {
	// POST /call_center/team/:team_id/supervisor
	Create(ctx context.Context, in *SupervisorInTeam, opts ...grpc.CallOption) (*SupervisorInTeam, error)
	// GET /call_center/team/:team_id/supervisor
	List(ctx context.Context, in *ListForItemRequest, opts ...grpc.CallOption) (*ListSupervisorInTeam, error)
	// GET /call_center/team/:team_id/supervisor/:id
	Get(ctx context.Context, in *SupervisorTeamItemReqeust, opts ...grpc.CallOption) (*SupervisorInTeam, error)
	// PUT /call_center/team/:team_id/supervisor/:id
	Update(ctx context.Context, in *SupervisorInTeam, opts ...grpc.CallOption) (*SupervisorInTeam, error)
	// DELETE /call_center/team/:team_id/supervisor/:id
	Remove(ctx context.Context, in *SupervisorTeamItemReqeust, opts ...grpc.CallOption) (*SupervisorInTeam, error)
}

type supervisorInTeamApiClient struct {
	cc *grpc.ClientConn
}

func NewSupervisorInTeamApiClient(cc *grpc.ClientConn) SupervisorInTeamApiClient {
	return &supervisorInTeamApiClient{cc}
}

func (c *supervisorInTeamApiClient) Create(ctx context.Context, in *SupervisorInTeam, opts ...grpc.CallOption) (*SupervisorInTeam, error) {
	out := new(SupervisorInTeam)
	err := c.cc.Invoke(ctx, "/engine.SupervisorInTeamApi/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorInTeamApiClient) List(ctx context.Context, in *ListForItemRequest, opts ...grpc.CallOption) (*ListSupervisorInTeam, error) {
	out := new(ListSupervisorInTeam)
	err := c.cc.Invoke(ctx, "/engine.SupervisorInTeamApi/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorInTeamApiClient) Get(ctx context.Context, in *SupervisorTeamItemReqeust, opts ...grpc.CallOption) (*SupervisorInTeam, error) {
	out := new(SupervisorInTeam)
	err := c.cc.Invoke(ctx, "/engine.SupervisorInTeamApi/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorInTeamApiClient) Update(ctx context.Context, in *SupervisorInTeam, opts ...grpc.CallOption) (*SupervisorInTeam, error) {
	out := new(SupervisorInTeam)
	err := c.cc.Invoke(ctx, "/engine.SupervisorInTeamApi/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supervisorInTeamApiClient) Remove(ctx context.Context, in *SupervisorTeamItemReqeust, opts ...grpc.CallOption) (*SupervisorInTeam, error) {
	out := new(SupervisorInTeam)
	err := c.cc.Invoke(ctx, "/engine.SupervisorInTeamApi/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SupervisorInTeamApiServer is the server API for SupervisorInTeamApi service.
type SupervisorInTeamApiServer interface {
	// POST /call_center/team/:team_id/supervisor
	Create(context.Context, *SupervisorInTeam) (*SupervisorInTeam, error)
	// GET /call_center/team/:team_id/supervisor
	List(context.Context, *ListForItemRequest) (*ListSupervisorInTeam, error)
	// GET /call_center/team/:team_id/supervisor/:id
	Get(context.Context, *SupervisorTeamItemReqeust) (*SupervisorInTeam, error)
	// PUT /call_center/team/:team_id/supervisor/:id
	Update(context.Context, *SupervisorInTeam) (*SupervisorInTeam, error)
	// DELETE /call_center/team/:team_id/supervisor/:id
	Remove(context.Context, *SupervisorTeamItemReqeust) (*SupervisorInTeam, error)
}

// UnimplementedSupervisorInTeamApiServer can be embedded to have forward compatible implementations.
type UnimplementedSupervisorInTeamApiServer struct {
}

func (*UnimplementedSupervisorInTeamApiServer) Create(ctx context.Context, req *SupervisorInTeam) (*SupervisorInTeam, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSupervisorInTeamApiServer) List(ctx context.Context, req *ListForItemRequest) (*ListSupervisorInTeam, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSupervisorInTeamApiServer) Get(ctx context.Context, req *SupervisorTeamItemReqeust) (*SupervisorInTeam, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedSupervisorInTeamApiServer) Update(ctx context.Context, req *SupervisorInTeam) (*SupervisorInTeam, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedSupervisorInTeamApiServer) Remove(ctx context.Context, req *SupervisorTeamItemReqeust) (*SupervisorInTeam, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterSupervisorInTeamApiServer(s *grpc.Server, srv SupervisorInTeamApiServer) {
	s.RegisterService(&_SupervisorInTeamApi_serviceDesc, srv)
}

func _SupervisorInTeamApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupervisorInTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorInTeamApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.SupervisorInTeamApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorInTeamApiServer).Create(ctx, req.(*SupervisorInTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorInTeamApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListForItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorInTeamApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.SupervisorInTeamApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorInTeamApiServer).List(ctx, req.(*ListForItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorInTeamApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupervisorTeamItemReqeust)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorInTeamApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.SupervisorInTeamApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorInTeamApiServer).Get(ctx, req.(*SupervisorTeamItemReqeust))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorInTeamApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupervisorInTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorInTeamApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.SupervisorInTeamApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorInTeamApiServer).Update(ctx, req.(*SupervisorInTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupervisorInTeamApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupervisorTeamItemReqeust)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupervisorInTeamApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.SupervisorInTeamApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupervisorInTeamApiServer).Remove(ctx, req.(*SupervisorTeamItemReqeust))
	}
	return interceptor(ctx, in, info, handler)
}

var _SupervisorInTeamApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.SupervisorInTeamApi",
	HandlerType: (*SupervisorInTeamApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SupervisorInTeamApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SupervisorInTeamApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SupervisorInTeamApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SupervisorInTeamApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _SupervisorInTeamApi_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "supervisor_in_team.proto",
}
