// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acr_routing_scheme.proto

package engine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoutingScheme struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64          `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt            int64          `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *Lookup        `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt            int64          `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy            *Lookup        `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name                 string         `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Description          string         `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Type                 int32          `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Scheme               *_struct.Value `protobuf:"bytes,10,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Payload              *_struct.Value `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	Debug                bool           `protobuf:"varint,12,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoutingScheme) Reset()         { *m = RoutingScheme{} }
func (m *RoutingScheme) String() string { return proto.CompactTextString(m) }
func (*RoutingScheme) ProtoMessage()    {}
func (*RoutingScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ca4c89a300c02fd, []int{0}
}

func (m *RoutingScheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutingScheme.Unmarshal(m, b)
}
func (m *RoutingScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutingScheme.Marshal(b, m, deterministic)
}
func (m *RoutingScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutingScheme.Merge(m, src)
}
func (m *RoutingScheme) XXX_Size() int {
	return xxx_messageInfo_RoutingScheme.Size(m)
}
func (m *RoutingScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutingScheme.DiscardUnknown(m)
}

var xxx_messageInfo_RoutingScheme proto.InternalMessageInfo

func (m *RoutingScheme) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoutingScheme) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *RoutingScheme) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *RoutingScheme) GetCreatedBy() *Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *RoutingScheme) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *RoutingScheme) GetUpdatedBy() *Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *RoutingScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoutingScheme) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RoutingScheme) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RoutingScheme) GetScheme() *_struct.Value {
	if m != nil {
		return m.Scheme
	}
	return nil
}

func (m *RoutingScheme) GetPayload() *_struct.Value {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *RoutingScheme) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type ListRoutingScheme struct {
	Items                []*RoutingScheme `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListRoutingScheme) Reset()         { *m = ListRoutingScheme{} }
func (m *ListRoutingScheme) String() string { return proto.CompactTextString(m) }
func (*ListRoutingScheme) ProtoMessage()    {}
func (*ListRoutingScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ca4c89a300c02fd, []int{1}
}

func (m *ListRoutingScheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutingScheme.Unmarshal(m, b)
}
func (m *ListRoutingScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutingScheme.Marshal(b, m, deterministic)
}
func (m *ListRoutingScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutingScheme.Merge(m, src)
}
func (m *ListRoutingScheme) XXX_Size() int {
	return xxx_messageInfo_ListRoutingScheme.Size(m)
}
func (m *ListRoutingScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutingScheme.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutingScheme proto.InternalMessageInfo

func (m *ListRoutingScheme) GetItems() []*RoutingScheme {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*RoutingScheme)(nil), "engine.RoutingScheme")
	proto.RegisterType((*ListRoutingScheme)(nil), "engine.ListRoutingScheme")
}

func init() { proto.RegisterFile("acr_routing_scheme.proto", fileDescriptor_7ca4c89a300c02fd) }

var fileDescriptor_7ca4c89a300c02fd = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0x36, 0x9b, 0xdd, 0x74, 0xf7, 0x44, 0x8b, 0x8e, 0x3f, 0x8c, 0x51, 0x21, 0xec, 0x55, 0x40,
	0x4c, 0x65, 0x0b, 0xd2, 0x4b, 0x5b, 0x2f, 0xa4, 0xd0, 0xab, 0x11, 0xbd, 0x0d, 0x93, 0xcc, 0x31,
	0x0e, 0x6e, 0x32, 0x31, 0x99, 0x11, 0xf2, 0x2a, 0xbe, 0x83, 0xef, 0x28, 0x99, 0x49, 0x6a, 0x53,
	0x96, 0x42, 0xef, 0x66, 0xbe, 0xbf, 0x73, 0xf8, 0x0e, 0x50, 0x5e, 0xb4, 0x59, 0xab, 0x8c, 0x96,
	0x75, 0x99, 0x75, 0xc5, 0x0f, 0xac, 0x30, 0x6d, 0x5a, 0xa5, 0x15, 0x09, 0xb0, 0x2e, 0x65, 0x8d,
	0x51, 0x58, 0xa8, 0xba, 0xd3, 0x0e, 0x8c, 0x5e, 0x97, 0x4a, 0x95, 0x7b, 0x3c, 0xb1, 0xbf, 0xdc,
	0x7c, 0x3f, 0xe9, 0x74, 0x6b, 0x8a, 0x91, 0xdd, 0xfe, 0xf1, 0xe1, 0x11, 0x73, 0x59, 0x5f, 0x6c,
	0x14, 0x39, 0x86, 0x85, 0x14, 0xd4, 0x8b, 0xbd, 0xc4, 0x67, 0x0b, 0x29, 0xc8, 0x2b, 0xd8, 0x08,
	0x55, 0x71, 0x59, 0x67, 0x52, 0xd0, 0x85, 0x85, 0xd7, 0x0e, 0xb8, 0x14, 0xe4, 0x0d, 0x40, 0xd1,
	0x22, 0xd7, 0x28, 0x32, 0xae, 0xa9, 0x6f, 0xd9, 0xcd, 0x88, 0x9c, 0x6b, 0xf2, 0xee, 0x3f, 0x9d,
	0xf7, 0x74, 0x19, 0x7b, 0x49, 0xb8, 0x3b, 0x4e, 0xdd, 0x96, 0xe9, 0x95, 0x52, 0x3f, 0x4d, 0x73,
	0x2d, 0xbf, 0xe8, 0x87, 0x34, 0xd3, 0x88, 0x29, 0x6d, 0xe5, 0xd2, 0x46, 0xc4, 0xa5, 0x4d, 0x74,
	0xde, 0xd3, 0xe0, 0x70, 0xda, 0xa8, 0xb8, 0xe8, 0x09, 0x81, 0x65, 0xcd, 0x2b, 0xa4, 0x47, 0xb1,
	0x97, 0x6c, 0x98, 0x7d, 0x93, 0x18, 0x42, 0x81, 0x5d, 0xd1, 0xca, 0x46, 0x4b, 0x55, 0xd3, 0xb5,
	0xa5, 0x6e, 0x42, 0x83, 0x4b, 0xf7, 0x0d, 0xd2, 0x4d, 0xec, 0x25, 0x2b, 0x66, 0xdf, 0x24, 0x85,
	0xc0, 0xf5, 0x4c, 0xc1, 0x0e, 0x7d, 0x91, 0xba, 0x4e, 0xd3, 0xa9, 0xd3, 0xf4, 0x1b, 0xdf, 0x1b,
	0x64, 0xa3, 0x8a, 0xbc, 0x87, 0xa3, 0x86, 0xf7, 0x7b, 0xc5, 0x05, 0x0d, 0xef, 0x34, 0x4c, 0x32,
	0xf2, 0x0c, 0x56, 0x02, 0x73, 0x53, 0xd2, 0x87, 0xb1, 0x97, 0xac, 0x99, 0xfb, 0x6c, 0x3f, 0xc2,
	0x93, 0x2b, 0xd9, 0xe9, 0xf9, 0x7d, 0xde, 0xc2, 0x4a, 0x6a, 0xac, 0x3a, 0xea, 0xc5, 0x7e, 0x12,
	0xee, 0x9e, 0x4f, 0x05, 0xcc, 0x54, 0xcc, 0x69, 0x76, 0x7f, 0x17, 0xf0, 0x78, 0x46, 0x9c, 0x37,
	0x92, 0x9c, 0x41, 0xf0, 0xc9, 0x76, 0x4e, 0x0e, 0x9b, 0xa3, 0xc3, 0xf0, 0xf6, 0x01, 0x39, 0x83,
	0xe5, 0xb0, 0x10, 0x79, 0x7a, 0xdd, 0xfa, 0xb0, 0x1e, 0xfe, 0x32, 0xd8, 0xe9, 0xe8, 0xe5, 0x0c,
	0xbc, 0xe5, 0x3c, 0x05, 0xff, 0x33, 0xde, 0x30, 0x5e, 0x6a, 0xac, 0x26, 0xe3, 0x1d, 0xe3, 0x82,
	0xaf, 0xf6, 0x9c, 0xf7, 0x5e, 0xf4, 0x03, 0x04, 0x0c, 0x2b, 0xf5, 0x1b, 0xef, 0x37, 0x31, 0x0f,
	0xec, 0x81, 0x4e, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x6c, 0xa5, 0x39, 0x64, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoutingSchemeApiClient is the client API for RoutingSchemeApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoutingSchemeApiClient interface {
	// POST /routing/scheme
	Create(ctx context.Context, in *RoutingScheme, opts ...grpc.CallOption) (*RoutingScheme, error)
	// GET /routing/scheme?size=10&page=0
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListRoutingScheme, error)
	// GET /routing/scheme/:ID
	Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingScheme, error)
	// PUT /routing/scheme/:ID
	Update(ctx context.Context, in *RoutingScheme, opts ...grpc.CallOption) (*RoutingScheme, error)
	// DELETE /routing/scheme/:ID
	Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingScheme, error)
}

type routingSchemeApiClient struct {
	cc *grpc.ClientConn
}

func NewRoutingSchemeApiClient(cc *grpc.ClientConn) RoutingSchemeApiClient {
	return &routingSchemeApiClient{cc}
}

func (c *routingSchemeApiClient) Create(ctx context.Context, in *RoutingScheme, opts ...grpc.CallOption) (*RoutingScheme, error) {
	out := new(RoutingScheme)
	err := c.cc.Invoke(ctx, "/engine.RoutingSchemeApi/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingSchemeApiClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListRoutingScheme, error) {
	out := new(ListRoutingScheme)
	err := c.cc.Invoke(ctx, "/engine.RoutingSchemeApi/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingSchemeApiClient) Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingScheme, error) {
	out := new(RoutingScheme)
	err := c.cc.Invoke(ctx, "/engine.RoutingSchemeApi/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingSchemeApiClient) Update(ctx context.Context, in *RoutingScheme, opts ...grpc.CallOption) (*RoutingScheme, error) {
	out := new(RoutingScheme)
	err := c.cc.Invoke(ctx, "/engine.RoutingSchemeApi/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingSchemeApiClient) Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingScheme, error) {
	out := new(RoutingScheme)
	err := c.cc.Invoke(ctx, "/engine.RoutingSchemeApi/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoutingSchemeApiServer is the server API for RoutingSchemeApi service.
type RoutingSchemeApiServer interface {
	// POST /routing/scheme
	Create(context.Context, *RoutingScheme) (*RoutingScheme, error)
	// GET /routing/scheme?size=10&page=0
	List(context.Context, *ListRequest) (*ListRoutingScheme, error)
	// GET /routing/scheme/:ID
	Get(context.Context, *ItemRequest) (*RoutingScheme, error)
	// PUT /routing/scheme/:ID
	Update(context.Context, *RoutingScheme) (*RoutingScheme, error)
	// DELETE /routing/scheme/:ID
	Remove(context.Context, *ItemRequest) (*RoutingScheme, error)
}

// UnimplementedRoutingSchemeApiServer can be embedded to have forward compatible implementations.
type UnimplementedRoutingSchemeApiServer struct {
}

func (*UnimplementedRoutingSchemeApiServer) Create(ctx context.Context, req *RoutingScheme) (*RoutingScheme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRoutingSchemeApiServer) List(ctx context.Context, req *ListRequest) (*ListRoutingScheme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRoutingSchemeApiServer) Get(ctx context.Context, req *ItemRequest) (*RoutingScheme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRoutingSchemeApiServer) Update(ctx context.Context, req *RoutingScheme) (*RoutingScheme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRoutingSchemeApiServer) Remove(ctx context.Context, req *ItemRequest) (*RoutingScheme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterRoutingSchemeApiServer(s *grpc.Server, srv RoutingSchemeApiServer) {
	s.RegisterService(&_RoutingSchemeApi_serviceDesc, srv)
}

func _RoutingSchemeApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingSchemeApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingSchemeApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingSchemeApiServer).Create(ctx, req.(*RoutingScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingSchemeApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingSchemeApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingSchemeApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingSchemeApiServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingSchemeApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingSchemeApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingSchemeApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingSchemeApiServer).Get(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingSchemeApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingSchemeApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingSchemeApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingSchemeApiServer).Update(ctx, req.(*RoutingScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingSchemeApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingSchemeApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingSchemeApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingSchemeApiServer).Remove(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoutingSchemeApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.RoutingSchemeApi",
	HandlerType: (*RoutingSchemeApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RoutingSchemeApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RoutingSchemeApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RoutingSchemeApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RoutingSchemeApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _RoutingSchemeApi_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "acr_routing_scheme.proto",
}
