// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acr_routing_inbound_call.proto

/*
Package engine is a generated protocol buffer package.

It is generated from these files:
	acr_routing_inbound_call.proto
	acr_routing_out_call.proto
	acr_routing_scheme.proto
	acr_routing_variables.proto
	agent.proto
	agent_skill.proto
	agent_team.proto
	calendar.proto
	const.proto
	skill.proto

It has these top-level messages:
	RoutingInboundCall
	ListRoutingInboundCall
	RoutingOutboundCall
	ListRoutingOutboundCall
	RoutingScheme
	ListRoutingScheme
	RoutingVariable
	ListRoutingVariable
	SkillAgent
	AgentStatusRequest
	Agent
	ListAgent
	AgentSkillItemReqeust
	AgentSkillItem
	AgentSkill
	ListAgentSkill
	AgentTeam
	ListAgentTeam
	ListCalendar
	Calendar
	ListTimezoneResponse
	Timezone
	AcceptOfDay
	AcceptOfDayReqeust
	ListAcceptOfDay
	Lookup
	ListRequest
	DomainRecord
	ListForItemRequest
	ItemRequest
	Response
	Skill
	ListSkill
*/
package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoutingInboundCall struct {
	Id          int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId    int64    `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	CreatedAt   int64    `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CreatedBy   *Lookup  `protobuf:"bytes,4,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	UpdatedAt   int64    `protobuf:"varint,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UpdatedBy   *Lookup  `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	Name        string   `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Description string   `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	StartScheme *Lookup  `protobuf:"bytes,9,opt,name=start_scheme,json=startScheme" json:"start_scheme,omitempty"`
	StopScheme  *Lookup  `protobuf:"bytes,10,opt,name=stop_scheme,json=stopScheme" json:"stop_scheme,omitempty"`
	Numbers     []string `protobuf:"bytes,11,rep,name=numbers" json:"numbers,omitempty"`
	Host        string   `protobuf:"bytes,12,opt,name=host" json:"host,omitempty"`
	Timezone    *Lookup  `protobuf:"bytes,13,opt,name=timezone" json:"timezone,omitempty"`
	Debug       bool     `protobuf:"varint,14,opt,name=debug" json:"debug,omitempty"`
	Disabled    bool     `protobuf:"varint,15,opt,name=disabled" json:"disabled,omitempty"`
}

func (m *RoutingInboundCall) Reset()                    { *m = RoutingInboundCall{} }
func (m *RoutingInboundCall) String() string            { return proto.CompactTextString(m) }
func (*RoutingInboundCall) ProtoMessage()               {}
func (*RoutingInboundCall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoutingInboundCall) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoutingInboundCall) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *RoutingInboundCall) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *RoutingInboundCall) GetCreatedBy() *Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *RoutingInboundCall) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *RoutingInboundCall) GetUpdatedBy() *Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *RoutingInboundCall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoutingInboundCall) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RoutingInboundCall) GetStartScheme() *Lookup {
	if m != nil {
		return m.StartScheme
	}
	return nil
}

func (m *RoutingInboundCall) GetStopScheme() *Lookup {
	if m != nil {
		return m.StopScheme
	}
	return nil
}

func (m *RoutingInboundCall) GetNumbers() []string {
	if m != nil {
		return m.Numbers
	}
	return nil
}

func (m *RoutingInboundCall) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RoutingInboundCall) GetTimezone() *Lookup {
	if m != nil {
		return m.Timezone
	}
	return nil
}

func (m *RoutingInboundCall) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *RoutingInboundCall) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type ListRoutingInboundCall struct {
	Items []*RoutingInboundCall `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListRoutingInboundCall) Reset()                    { *m = ListRoutingInboundCall{} }
func (m *ListRoutingInboundCall) String() string            { return proto.CompactTextString(m) }
func (*ListRoutingInboundCall) ProtoMessage()               {}
func (*ListRoutingInboundCall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListRoutingInboundCall) GetItems() []*RoutingInboundCall {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*RoutingInboundCall)(nil), "engine.RoutingInboundCall")
	proto.RegisterType((*ListRoutingInboundCall)(nil), "engine.ListRoutingInboundCall")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoutingInboundCallApi service

type RoutingInboundCallApiClient interface {
	// POST /routing/inbound_call
	Create(ctx context.Context, in *RoutingInboundCall, opts ...grpc.CallOption) (*RoutingInboundCall, error)
	// GET /routing/inbound_call
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListRoutingInboundCall, error)
	// GET /routing/inbound_call/:ID
	Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingInboundCall, error)
	// PUT /routing/inbound_call/:ID
	Update(ctx context.Context, in *RoutingInboundCall, opts ...grpc.CallOption) (*RoutingInboundCall, error)
	// DELETE /routing/inbound_call/:ID
	Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingInboundCall, error)
}

type routingInboundCallApiClient struct {
	cc *grpc.ClientConn
}

func NewRoutingInboundCallApiClient(cc *grpc.ClientConn) RoutingInboundCallApiClient {
	return &routingInboundCallApiClient{cc}
}

func (c *routingInboundCallApiClient) Create(ctx context.Context, in *RoutingInboundCall, opts ...grpc.CallOption) (*RoutingInboundCall, error) {
	out := new(RoutingInboundCall)
	err := grpc.Invoke(ctx, "/engine.RoutingInboundCallApi/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInboundCallApiClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListRoutingInboundCall, error) {
	out := new(ListRoutingInboundCall)
	err := grpc.Invoke(ctx, "/engine.RoutingInboundCallApi/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInboundCallApiClient) Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingInboundCall, error) {
	out := new(RoutingInboundCall)
	err := grpc.Invoke(ctx, "/engine.RoutingInboundCallApi/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInboundCallApiClient) Update(ctx context.Context, in *RoutingInboundCall, opts ...grpc.CallOption) (*RoutingInboundCall, error) {
	out := new(RoutingInboundCall)
	err := grpc.Invoke(ctx, "/engine.RoutingInboundCallApi/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInboundCallApiClient) Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*RoutingInboundCall, error) {
	out := new(RoutingInboundCall)
	err := grpc.Invoke(ctx, "/engine.RoutingInboundCallApi/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoutingInboundCallApi service

type RoutingInboundCallApiServer interface {
	// POST /routing/inbound_call
	Create(context.Context, *RoutingInboundCall) (*RoutingInboundCall, error)
	// GET /routing/inbound_call
	List(context.Context, *ListRequest) (*ListRoutingInboundCall, error)
	// GET /routing/inbound_call/:ID
	Get(context.Context, *ItemRequest) (*RoutingInboundCall, error)
	// PUT /routing/inbound_call/:ID
	Update(context.Context, *RoutingInboundCall) (*RoutingInboundCall, error)
	// DELETE /routing/inbound_call/:ID
	Remove(context.Context, *ItemRequest) (*RoutingInboundCall, error)
}

func RegisterRoutingInboundCallApiServer(s *grpc.Server, srv RoutingInboundCallApiServer) {
	s.RegisterService(&_RoutingInboundCallApi_serviceDesc, srv)
}

func _RoutingInboundCallApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingInboundCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInboundCallApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingInboundCallApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInboundCallApiServer).Create(ctx, req.(*RoutingInboundCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInboundCallApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInboundCallApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingInboundCallApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInboundCallApiServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInboundCallApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInboundCallApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingInboundCallApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInboundCallApiServer).Get(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInboundCallApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingInboundCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInboundCallApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingInboundCallApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInboundCallApiServer).Update(ctx, req.(*RoutingInboundCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInboundCallApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInboundCallApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.RoutingInboundCallApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInboundCallApiServer).Remove(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoutingInboundCallApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.RoutingInboundCallApi",
	HandlerType: (*RoutingInboundCallApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RoutingInboundCallApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RoutingInboundCallApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RoutingInboundCallApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RoutingInboundCallApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _RoutingInboundCallApi_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "acr_routing_inbound_call.proto",
}

func init() { proto.RegisterFile("acr_routing_inbound_call.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcd, 0x8b, 0xd4, 0x30,
	0x14, 0xb7, 0xf3, 0xd1, 0x6d, 0x5f, 0xd7, 0x11, 0xe2, 0x07, 0xa1, 0xe2, 0x52, 0xe6, 0x54, 0x04,
	0x47, 0x1d, 0x2f, 0x82, 0x78, 0xd8, 0xd9, 0x83, 0x8c, 0xec, 0xa9, 0xe2, 0xb9, 0xa4, 0xcd, 0x63,
	0x36, 0xd8, 0x26, 0xb5, 0x49, 0x85, 0xf1, 0xea, 0xdf, 0xe8, 0xff, 0x23, 0x4d, 0xa6, 0xe3, 0xca,
	0x96, 0x39, 0xb8, 0xb7, 0xbc, 0xdf, 0xd7, 0xfb, 0x95, 0x26, 0x70, 0xc1, 0xca, 0x36, 0x6f, 0x55,
	0x67, 0x84, 0xdc, 0xe5, 0x42, 0x16, 0xaa, 0x93, 0x3c, 0x2f, 0x59, 0x55, 0xad, 0x9a, 0x56, 0x19,
	0x45, 0x7c, 0x94, 0x3b, 0x21, 0x31, 0x8e, 0x4a, 0x25, 0xb5, 0x71, 0xe0, 0xf2, 0xd7, 0x0c, 0x48,
	0xe6, 0x3c, 0x5b, 0x67, 0xb9, 0x62, 0x55, 0x45, 0x16, 0x30, 0x11, 0x9c, 0x7a, 0x89, 0x97, 0x4e,
	0xb3, 0x89, 0xe0, 0xe4, 0x39, 0x84, 0x5c, 0xd5, 0x4c, 0xc8, 0x5c, 0x70, 0x3a, 0xb1, 0x70, 0xe0,
	0x80, 0x2d, 0x27, 0x2f, 0x00, 0xca, 0x16, 0x99, 0x41, 0x9e, 0x33, 0x43, 0xa7, 0x96, 0x0d, 0x0f,
	0xc8, 0xa5, 0x21, 0xaf, 0xfe, 0xd2, 0xc5, 0x9e, 0xce, 0x12, 0x2f, 0x8d, 0xd6, 0x8b, 0x95, 0x2b,
	0xb3, 0xba, 0x56, 0xea, 0x5b, 0xd7, 0x1c, 0xe5, 0x9b, 0x7d, 0x9f, 0xd6, 0x35, 0x7c, 0x48, 0x9b,
	0xbb, 0xb4, 0x03, 0xe2, 0xd2, 0x06, 0xba, 0xd8, 0x53, 0x7f, 0x3c, 0xed, 0xa0, 0xd8, 0xec, 0x09,
	0x81, 0x99, 0x64, 0x35, 0xd2, 0xb3, 0xc4, 0x4b, 0xc3, 0xcc, 0x9e, 0x49, 0x02, 0x11, 0x47, 0x5d,
	0xb6, 0xa2, 0x31, 0x42, 0x49, 0x1a, 0x58, 0xea, 0x36, 0x44, 0xde, 0xc2, 0xb9, 0x36, 0xac, 0x35,
	0xb9, 0x2e, 0x6f, 0xb0, 0x46, 0x1a, 0x8e, 0xae, 0x89, 0xac, 0xe6, 0x8b, 0x95, 0x90, 0xd7, 0x10,
	0x69, 0xa3, 0x9a, 0xc1, 0x01, 0xa3, 0x0e, 0xe8, 0x25, 0x07, 0x03, 0x85, 0x33, 0xd9, 0xd5, 0x05,
	0xb6, 0x9a, 0x46, 0xc9, 0x34, 0x0d, 0xb3, 0x61, 0xec, 0x3b, 0xdf, 0x28, 0x6d, 0xe8, 0xb9, 0xeb,
	0xdc, 0x9f, 0xc9, 0x4b, 0x08, 0x8c, 0xa8, 0xf1, 0xa7, 0x92, 0x48, 0x1f, 0x8e, 0x66, 0x1f, 0x79,
	0xf2, 0x04, 0xe6, 0x1c, 0x8b, 0x6e, 0x47, 0x17, 0x89, 0x97, 0x06, 0x99, 0x1b, 0x48, 0x0c, 0x01,
	0x17, 0x9a, 0x15, 0x15, 0x72, 0xfa, 0xc8, 0x12, 0xc7, 0x79, 0xf9, 0x19, 0x9e, 0x5d, 0x0b, 0x6d,
	0x46, 0x2e, 0xc2, 0x1b, 0x98, 0x0b, 0x83, 0xb5, 0xa6, 0x5e, 0x32, 0x4d, 0xa3, 0x75, 0x3c, 0x2c,
	0xbd, 0x2b, 0xcd, 0x9c, 0x70, 0xfd, 0x7b, 0x02, 0x4f, 0xef, 0xb2, 0x97, 0x8d, 0x20, 0x1b, 0xf0,
	0xaf, 0xec, 0x6f, 0x26, 0x27, 0x62, 0xe2, 0x13, 0xdc, 0xf2, 0x01, 0xf9, 0x08, 0xb3, 0xbe, 0x29,
	0x79, 0x7c, 0xfc, 0xfa, 0xbe, 0x37, 0x7e, 0xef, 0x50, 0x9b, 0xf8, 0xe2, 0x1f, 0x70, 0xcc, 0xfe,
	0x1e, 0xa6, 0x9f, 0xf0, 0x96, 0x7b, 0x6b, 0xb0, 0x1e, 0xdc, 0xa7, 0x17, 0x6f, 0xc0, 0xff, 0x6a,
	0x6f, 0xd5, 0x3d, 0xca, 0x7f, 0x00, 0x3f, 0xc3, 0x5a, 0xfd, 0xc0, 0xff, 0x28, 0x50, 0xf8, 0xf6,
	0xc1, 0xbe, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x4b, 0x40, 0x79, 0xe7, 0x03, 0x00, 0x00,
}
