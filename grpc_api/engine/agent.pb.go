// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

/*
Package engine is a generated protocol buffer package.

It is generated from these files:
	agent.proto
	agent_team.proto
	calendar.proto
	const.proto
	skill.proto

It has these top-level messages:
	AgentStatusRequest
	Agent
	ListAgent
	AgentTeam
	ListAgentTeam
	RemoveResponse
	ListCalendar
	Calendar
	ListTimezoneResponse
	Timezone
	AcceptOfDay
	AcceptOfDayReqeust
	ListAcceptOfDay
	Lookup
	ListRequest
	ItemRequest
	Response
	Skill
	ListSkill
*/
package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AgentStatusRequest_Status int32

const (
	AgentStatusRequest_ONLINE  AgentStatusRequest_Status = 0
	AgentStatusRequest_OFFLINE AgentStatusRequest_Status = 1
	AgentStatusRequest_PAUSE   AgentStatusRequest_Status = 2
)

var AgentStatusRequest_Status_name = map[int32]string{
	0: "ONLINE",
	1: "OFFLINE",
	2: "PAUSE",
}
var AgentStatusRequest_Status_value = map[string]int32{
	"ONLINE":  0,
	"OFFLINE": 1,
	"PAUSE":   2,
}

func (x AgentStatusRequest_Status) String() string {
	return proto.EnumName(AgentStatusRequest_Status_name, int32(x))
}
func (AgentStatusRequest_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type AgentStatusRequest struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId int64  `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	Status   string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *AgentStatusRequest) Reset()                    { *m = AgentStatusRequest{} }
func (m *AgentStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*AgentStatusRequest) ProtoMessage()               {}
func (*AgentStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AgentStatusRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AgentStatusRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *AgentStatusRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Agent struct {
	Id          int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId    int64   `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	User        *Lookup `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status      string  `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	State       string  `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *Agent) Reset()                    { *m = Agent{} }
func (m *Agent) String() string            { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()               {}
func (*Agent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Agent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Agent) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *Agent) GetUser() *Lookup {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Agent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Agent) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Agent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListAgent struct {
	Items []*Agent `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListAgent) Reset()                    { *m = ListAgent{} }
func (m *ListAgent) String() string            { return proto.CompactTextString(m) }
func (*ListAgent) ProtoMessage()               {}
func (*ListAgent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListAgent) GetItems() []*Agent {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*AgentStatusRequest)(nil), "engine.AgentStatusRequest")
	proto.RegisterType((*Agent)(nil), "engine.Agent")
	proto.RegisterType((*ListAgent)(nil), "engine.ListAgent")
	proto.RegisterEnum("engine.AgentStatusRequest_Status", AgentStatusRequest_Status_name, AgentStatusRequest_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentApi service

type AgentApiClient interface {
	Create(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListAgent, error)
	Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error)
	Update(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error)
	UpdateStatus(ctx context.Context, in *AgentStatusRequest, opts ...grpc.CallOption) (*Response, error)
}

type agentApiClient struct {
	cc *grpc.ClientConn
}

func NewAgentApiClient(cc *grpc.ClientConn) AgentApiClient {
	return &agentApiClient{cc}
}

func (c *agentApiClient) Create(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListAgent, error) {
	out := new(ListAgent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Update(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) UpdateStatus(ctx context.Context, in *AgentStatusRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/engine.AgentApi/UpdateStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentApi service

type AgentApiServer interface {
	Create(context.Context, *Agent) (*Agent, error)
	List(context.Context, *ListRequest) (*ListAgent, error)
	Get(context.Context, *ItemRequest) (*Agent, error)
	Update(context.Context, *Agent) (*Agent, error)
	Remove(context.Context, *ItemRequest) (*Agent, error)
	UpdateStatus(context.Context, *AgentStatusRequest) (*Response, error)
}

func RegisterAgentApiServer(s *grpc.Server, srv AgentApiServer) {
	s.RegisterService(&_AgentApi_serviceDesc, srv)
}

func _AgentApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Create(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Get(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Update(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Remove(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).UpdateStatus(ctx, req.(*AgentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.AgentApi",
	HandlerType: (*AgentApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AgentApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AgentApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AgentApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AgentApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _AgentApi_Remove_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _AgentApi_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6a, 0xb3, 0x40,
	0x14, 0x8d, 0x1a, 0x27, 0xf1, 0xfa, 0x7d, 0x21, 0x9d, 0x96, 0x22, 0x76, 0x23, 0x76, 0x23, 0xb4,
	0x48, 0x48, 0xf7, 0x85, 0x50, 0x92, 0x12, 0x08, 0x49, 0x31, 0x64, 0x5d, 0xd2, 0x78, 0x09, 0x43,
	0xd1, 0xb1, 0xce, 0xd8, 0x57, 0xe8, 0xab, 0x74, 0xd3, 0x77, 0x2c, 0x8e, 0x5a, 0x94, 0x6e, 0xd2,
	0x9d, 0xf7, 0x9c, 0x7b, 0x7e, 0x06, 0x2f, 0xd8, 0xfb, 0x23, 0xa6, 0x32, 0xcc, 0x72, 0x2e, 0x39,
	0x25, 0x98, 0x1e, 0x59, 0x8a, 0xae, 0x7d, 0xe0, 0xa9, 0xa8, 0x41, 0xff, 0x43, 0x03, 0x3a, 0x2b,
	0x97, 0xb6, 0x72, 0x2f, 0x0b, 0x11, 0xe1, 0x5b, 0x81, 0x42, 0xd2, 0x11, 0xe8, 0x2c, 0x76, 0x34,
	0x4f, 0x0b, 0x8c, 0x48, 0x67, 0x31, 0xbd, 0x02, 0x2b, 0xe6, 0xc9, 0x9e, 0xa5, 0xcf, 0x2c, 0x76,
	0x74, 0x05, 0x0f, 0x2b, 0x60, 0x19, 0xd3, 0x4b, 0x20, 0x42, 0xa9, 0x1d, 0xc3, 0xd3, 0x02, 0x2b,
	0xaa, 0x27, 0xff, 0x16, 0x48, 0xe5, 0x4a, 0x01, 0xc8, 0x66, 0xbd, 0x5a, 0xae, 0xe7, 0xe3, 0x1e,
	0xb5, 0x61, 0xb0, 0x59, 0x2c, 0xd4, 0xa0, 0x51, 0x0b, 0xcc, 0xa7, 0xd9, 0x6e, 0x3b, 0x1f, 0xeb,
	0xfe, 0xa7, 0x06, 0xa6, 0x6a, 0xf2, 0xb7, 0x70, 0x1f, 0xfa, 0x85, 0xc0, 0x5c, 0x45, 0xdb, 0xd3,
	0x51, 0x58, 0x3d, 0x32, 0x5c, 0x71, 0xfe, 0x5a, 0x64, 0x91, 0xe2, 0x5a, 0x05, 0xfb, 0xed, 0x82,
	0xf4, 0x02, 0xcc, 0xf2, 0x0b, 0x1d, 0x53, 0xc1, 0xd5, 0x40, 0x3d, 0xb0, 0x63, 0x14, 0x87, 0x9c,
	0x65, 0x92, 0xf1, 0xd4, 0x19, 0x28, 0xae, 0x0d, 0xf9, 0x13, 0xb0, 0x56, 0x4c, 0xc8, 0xaa, 0xed,
	0x35, 0x98, 0x4c, 0x62, 0x22, 0x1c, 0xcd, 0x33, 0x02, 0x7b, 0xfa, 0xbf, 0x69, 0xa0, 0xd8, 0xa8,
	0xe2, 0xa6, 0x5f, 0x3a, 0x0c, 0x15, 0x30, 0xcb, 0x18, 0x0d, 0x80, 0x3c, 0xe4, 0x58, 0x46, 0x75,
	0x97, 0xdd, 0xee, 0xe8, 0xf7, 0xe8, 0x04, 0xfa, 0x65, 0x10, 0x3d, 0xff, 0x79, 0x16, 0x13, 0xb2,
	0xfe, 0x47, 0xee, 0x59, 0x1b, 0x6c, 0x14, 0x37, 0x60, 0x3c, 0x62, 0x4b, 0xb0, 0x94, 0x98, 0x34,
	0x82, 0x5f, 0xf6, 0x01, 0x90, 0x5d, 0x16, 0x9f, 0x52, 0x24, 0x04, 0x12, 0x61, 0xc2, 0xdf, 0xf1,
	0x44, 0xe7, 0x7b, 0xf8, 0x57, 0x39, 0xd7, 0x07, 0xe0, 0x76, 0x16, 0x3a, 0xb7, 0xe6, 0x8e, 0x1b,
	0x2e, 0x42, 0x91, 0xf1, 0x54, 0xa0, 0xdf, 0x7b, 0x21, 0xea, 0x3a, 0xef, 0xbe, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x56, 0x27, 0x7d, 0xab, 0xc1, 0x02, 0x00, 0x00,
}
