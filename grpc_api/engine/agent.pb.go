// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AgentStatusRequest_Status int32

const (
	AgentStatusRequest_ONLINE  AgentStatusRequest_Status = 0
	AgentStatusRequest_OFFLINE AgentStatusRequest_Status = 1
	AgentStatusRequest_PAUSE   AgentStatusRequest_Status = 2
)

var AgentStatusRequest_Status_name = map[int32]string{
	0: "ONLINE",
	1: "OFFLINE",
	2: "PAUSE",
}
var AgentStatusRequest_Status_value = map[string]int32{
	"ONLINE":  0,
	"OFFLINE": 1,
	"PAUSE":   2,
}

func (x AgentStatusRequest_Status) String() string {
	return proto.EnumName(AgentStatusRequest_Status_name, int32(x))
}
func (AgentStatusRequest_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1, 0} }

type SkillAgent struct {
	Id       int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Skill    *Lookup `protobuf:"bytes,2,opt,name=skill" json:"skill,omitempty"`
	Agent    *Lookup `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
	Capacity int32   `protobuf:"varint,4,opt,name=capacity" json:"capacity,omitempty"`
}

func (m *SkillAgent) Reset()                    { *m = SkillAgent{} }
func (m *SkillAgent) String() string            { return proto.CompactTextString(m) }
func (*SkillAgent) ProtoMessage()               {}
func (*SkillAgent) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *SkillAgent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SkillAgent) GetSkill() *Lookup {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *SkillAgent) GetAgent() *Lookup {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *SkillAgent) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type AgentStatusRequest struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId int64  `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	Status   string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *AgentStatusRequest) Reset()                    { *m = AgentStatusRequest{} }
func (m *AgentStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*AgentStatusRequest) ProtoMessage()               {}
func (*AgentStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *AgentStatusRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AgentStatusRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *AgentStatusRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Agent struct {
	Id          int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId    int64   `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	User        *Lookup `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status      string  `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	State       string  `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *Agent) Reset()                    { *m = Agent{} }
func (m *Agent) String() string            { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()               {}
func (*Agent) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Agent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Agent) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *Agent) GetUser() *Lookup {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Agent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Agent) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Agent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListAgent struct {
	Items []*Agent `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListAgent) Reset()                    { *m = ListAgent{} }
func (m *ListAgent) String() string            { return proto.CompactTextString(m) }
func (*ListAgent) ProtoMessage()               {}
func (*ListAgent) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ListAgent) GetItems() []*Agent {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*SkillAgent)(nil), "engine.SkillAgent")
	proto.RegisterType((*AgentStatusRequest)(nil), "engine.AgentStatusRequest")
	proto.RegisterType((*Agent)(nil), "engine.Agent")
	proto.RegisterType((*ListAgent)(nil), "engine.ListAgent")
	proto.RegisterEnum("engine.AgentStatusRequest_Status", AgentStatusRequest_Status_name, AgentStatusRequest_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentApi service

type AgentApiClient interface {
	// POST /call_center/agent
	Create(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	// GET /call_center/agent
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListAgent, error)
	// GET /call_center/agent/:ID
	Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error)
	// PUT /call_center/agent/:ID
	Update(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	// DELETE /call_center/agent/:ID
	Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error)
	// PATCH /call_center/agent/:ID/status
	UpdateStatus(ctx context.Context, in *AgentStatusRequest, opts ...grpc.CallOption) (*Response, error)
}

type agentApiClient struct {
	cc *grpc.ClientConn
}

func NewAgentApiClient(cc *grpc.ClientConn) AgentApiClient {
	return &agentApiClient{cc}
}

func (c *agentApiClient) Create(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListAgent, error) {
	out := new(ListAgent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Get(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Update(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) Remove(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := grpc.Invoke(ctx, "/engine.AgentApi/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentApiClient) UpdateStatus(ctx context.Context, in *AgentStatusRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/engine.AgentApi/UpdateStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentApi service

type AgentApiServer interface {
	// POST /call_center/agent
	Create(context.Context, *Agent) (*Agent, error)
	// GET /call_center/agent
	List(context.Context, *ListRequest) (*ListAgent, error)
	// GET /call_center/agent/:ID
	Get(context.Context, *ItemRequest) (*Agent, error)
	// PUT /call_center/agent/:ID
	Update(context.Context, *Agent) (*Agent, error)
	// DELETE /call_center/agent/:ID
	Remove(context.Context, *ItemRequest) (*Agent, error)
	// PATCH /call_center/agent/:ID/status
	UpdateStatus(context.Context, *AgentStatusRequest) (*Response, error)
}

func RegisterAgentApiServer(s *grpc.Server, srv AgentApiServer) {
	s.RegisterService(&_AgentApi_serviceDesc, srv)
}

func _AgentApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Create(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Get(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Update(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).Remove(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentApi_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentApiServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentApi/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentApiServer).UpdateStatus(ctx, req.(*AgentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.AgentApi",
	HandlerType: (*AgentApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AgentApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AgentApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AgentApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AgentApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _AgentApi_Remove_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _AgentApi_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0xde, 0x49, 0x36, 0xd3, 0xdd, 0x17, 0x2d, 0xeb, 0x28, 0x12, 0xe2, 0x25, 0x8c, 0x1e, 0x02,
	0xca, 0x52, 0xd6, 0xbb, 0xb0, 0x48, 0x2b, 0x0b, 0x4b, 0x2b, 0xb3, 0xf4, 0x2c, 0x31, 0x79, 0x94,
	0xa1, 0x4d, 0x26, 0x66, 0x26, 0x82, 0x77, 0xc1, 0x7f, 0xc5, 0x8b, 0xff, 0xa3, 0x64, 0x26, 0x29,
	0x09, 0xad, 0xb2, 0xb7, 0x7c, 0x3f, 0xde, 0xf7, 0xbe, 0x4c, 0x26, 0x10, 0x66, 0x37, 0x58, 0x99,
	0x75, 0xdd, 0x28, 0xa3, 0x18, 0xc5, 0xea, 0x46, 0x56, 0x18, 0x87, 0xb9, 0xaa, 0x74, 0x4f, 0xf2,
	0x9f, 0x04, 0xe0, 0x70, 0x2b, 0xef, 0xee, 0xb6, 0x9d, 0x93, 0x9d, 0x82, 0x27, 0x8b, 0x88, 0x24,
	0x24, 0xf5, 0x85, 0x27, 0x0b, 0xf6, 0x06, 0x02, 0xdd, 0xa9, 0x91, 0x97, 0x90, 0x34, 0xdc, 0x9c,
	0xae, 0x5d, 0xc6, 0x7a, 0xaf, 0xd4, 0x6d, 0x5b, 0x0b, 0x27, 0x76, 0x2e, 0xbb, 0x28, 0xf2, 0x1f,
	0x77, 0x59, 0x91, 0xc5, 0xb0, 0xc8, 0xb3, 0x3a, 0xcb, 0xa5, 0xf9, 0x11, 0xcd, 0x13, 0x92, 0x06,
	0xe2, 0x1e, 0xf3, 0x5f, 0x04, 0x98, 0x6d, 0x70, 0x30, 0x99, 0x69, 0xb5, 0xc0, 0x6f, 0x2d, 0xea,
	0x87, 0x75, 0x5e, 0xc1, 0xb2, 0x50, 0x65, 0x26, 0xab, 0x2f, 0xb2, 0xb0, 0x95, 0x7c, 0xb1, 0x70,
	0xc4, 0xae, 0x60, 0x2f, 0x81, 0x6a, 0x3b, 0x6d, 0x6b, 0x2c, 0x45, 0x8f, 0xf8, 0x3b, 0xa0, 0x2e,
	0x95, 0x01, 0xd0, 0xab, 0xcb, 0xfd, 0xee, 0xf2, 0x7c, 0x35, 0x63, 0x21, 0x9c, 0x5c, 0x5d, 0x5c,
	0x58, 0x40, 0xd8, 0x12, 0x82, 0xcf, 0xdb, 0xeb, 0xc3, 0xf9, 0xca, 0xe3, 0xbf, 0x09, 0x04, 0x8f,
	0x9f, 0xc5, 0x7f, 0x97, 0x73, 0x98, 0xb7, 0x1a, 0x9b, 0x7f, 0x9c, 0x80, 0xd5, 0x46, 0x05, 0xe7,
	0xe3, 0x82, 0xec, 0x05, 0x04, 0xdd, 0x13, 0x46, 0x81, 0xa5, 0x1d, 0x60, 0x09, 0x84, 0x05, 0xea,
	0xbc, 0x91, 0xb5, 0x91, 0xaa, 0x8a, 0x4e, 0xac, 0x36, 0xa6, 0xf8, 0x19, 0x2c, 0xf7, 0x52, 0x1b,
	0xd7, 0xf6, 0x35, 0x04, 0xd2, 0x60, 0xa9, 0x23, 0x92, 0xf8, 0x69, 0xb8, 0x79, 0x3a, 0x34, 0xb0,
	0xaa, 0x70, 0xda, 0xe6, 0x8f, 0x07, 0x0b, 0x4b, 0x6c, 0x6b, 0xc9, 0x52, 0xa0, 0x1f, 0x1b, 0xec,
	0x56, 0x4d, 0xcd, 0xf1, 0x14, 0xf2, 0x19, 0x3b, 0x83, 0x79, 0xb7, 0x88, 0x3d, 0xbf, 0x7f, 0x2d,
	0xa9, 0x4d, 0xff, 0x8d, 0xe2, 0x67, 0x63, 0x72, 0x98, 0x78, 0x0b, 0xfe, 0x27, 0x1c, 0x0d, 0xec,
	0x0c, 0x96, 0xc3, 0xc0, 0x83, 0xf8, 0x14, 0xe8, 0x75, 0x5d, 0x1c, 0x53, 0x64, 0x0d, 0x54, 0x60,
	0xa9, 0xbe, 0xe3, 0x91, 0xc9, 0x1f, 0xe0, 0x89, 0x4b, 0xee, 0x2f, 0x40, 0x3c, 0x31, 0x4c, 0xee,
	0x5a, 0xbc, 0x1a, 0x34, 0x81, 0xba, 0x56, 0x95, 0x46, 0x3e, 0xfb, 0x4a, 0xed, 0x4f, 0xf2, 0xfe,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed, 0x44, 0xd0, 0x01, 0x48, 0x03, 0x00, 0x00,
}
