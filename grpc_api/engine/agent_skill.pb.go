// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent_skill.proto

package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AgentSkillItemReqeust struct {
	Id       int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AgentId  int64 `protobuf:"varint,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	DomainId int64 `protobuf:"varint,3,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
}

func (m *AgentSkillItemReqeust) Reset()                    { *m = AgentSkillItemReqeust{} }
func (m *AgentSkillItemReqeust) String() string            { return proto.CompactTextString(m) }
func (*AgentSkillItemReqeust) ProtoMessage()               {}
func (*AgentSkillItemReqeust) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *AgentSkillItemReqeust) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AgentSkillItemReqeust) GetAgentId() int64 {
	if m != nil {
		return m.AgentId
	}
	return 0
}

func (m *AgentSkillItemReqeust) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type AgentSkillItem struct {
	Id       int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Skill    *Lookup `protobuf:"bytes,2,opt,name=Skill" json:"Skill,omitempty"`
	Capacity int32   `protobuf:"varint,3,opt,name=Capacity" json:"Capacity,omitempty"`
}

func (m *AgentSkillItem) Reset()                    { *m = AgentSkillItem{} }
func (m *AgentSkillItem) String() string            { return proto.CompactTextString(m) }
func (*AgentSkillItem) ProtoMessage()               {}
func (*AgentSkillItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *AgentSkillItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AgentSkillItem) GetSkill() *Lookup {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *AgentSkillItem) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type AgentSkill struct {
	Id        int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DomainId  int64   `protobuf:"varint,2,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	CreatedAt int64   `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CreatedBy *Lookup `protobuf:"bytes,4,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	UpdatedAt int64   `protobuf:"varint,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UpdatedBy *Lookup `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
	Agent     *Lookup `protobuf:"bytes,7,opt,name=Agent" json:"Agent,omitempty"`
	Skill     *Lookup `protobuf:"bytes,8,opt,name=Skill" json:"Skill,omitempty"`
	Capacity  int32   `protobuf:"varint,9,opt,name=Capacity" json:"Capacity,omitempty"`
}

func (m *AgentSkill) Reset()                    { *m = AgentSkill{} }
func (m *AgentSkill) String() string            { return proto.CompactTextString(m) }
func (*AgentSkill) ProtoMessage()               {}
func (*AgentSkill) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *AgentSkill) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AgentSkill) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *AgentSkill) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *AgentSkill) GetCreatedBy() *Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *AgentSkill) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *AgentSkill) GetUpdatedBy() *Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *AgentSkill) GetAgent() *Lookup {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *AgentSkill) GetSkill() *Lookup {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *AgentSkill) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type ListAgentSkill struct {
	Items []*AgentSkillItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ListAgentSkill) Reset()                    { *m = ListAgentSkill{} }
func (m *ListAgentSkill) String() string            { return proto.CompactTextString(m) }
func (*ListAgentSkill) ProtoMessage()               {}
func (*ListAgentSkill) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ListAgentSkill) GetItems() []*AgentSkillItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*AgentSkillItemReqeust)(nil), "engine.AgentSkillItemReqeust")
	proto.RegisterType((*AgentSkillItem)(nil), "engine.AgentSkillItem")
	proto.RegisterType((*AgentSkill)(nil), "engine.AgentSkill")
	proto.RegisterType((*ListAgentSkill)(nil), "engine.ListAgentSkill")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentSkillApi service

type AgentSkillApiClient interface {
	// POST /call_center/agent/:ID/skill
	Create(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error)
	// GET /call_center/agent/:ID/skill
	List(ctx context.Context, in *ListForItemRequest, opts ...grpc.CallOption) (*ListAgentSkill, error)
	// GET /call_center/agent/:ID/skill/:SKILL_ID
	Get(ctx context.Context, in *AgentSkillItemReqeust, opts ...grpc.CallOption) (*AgentSkill, error)
	// PUT /call_center/agent/:ID/skill/:SKILL_ID
	Update(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error)
	// DELETE /call_center/agent/:ID/skill/:SKILL_ID
	Remove(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error)
}

type agentSkillApiClient struct {
	cc *grpc.ClientConn
}

func NewAgentSkillApiClient(cc *grpc.ClientConn) AgentSkillApiClient {
	return &agentSkillApiClient{cc}
}

func (c *agentSkillApiClient) Create(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error) {
	out := new(AgentSkill)
	err := grpc.Invoke(ctx, "/engine.AgentSkillApi/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentSkillApiClient) List(ctx context.Context, in *ListForItemRequest, opts ...grpc.CallOption) (*ListAgentSkill, error) {
	out := new(ListAgentSkill)
	err := grpc.Invoke(ctx, "/engine.AgentSkillApi/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentSkillApiClient) Get(ctx context.Context, in *AgentSkillItemReqeust, opts ...grpc.CallOption) (*AgentSkill, error) {
	out := new(AgentSkill)
	err := grpc.Invoke(ctx, "/engine.AgentSkillApi/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentSkillApiClient) Update(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error) {
	out := new(AgentSkill)
	err := grpc.Invoke(ctx, "/engine.AgentSkillApi/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentSkillApiClient) Remove(ctx context.Context, in *AgentSkill, opts ...grpc.CallOption) (*AgentSkill, error) {
	out := new(AgentSkill)
	err := grpc.Invoke(ctx, "/engine.AgentSkillApi/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentSkillApi service

type AgentSkillApiServer interface {
	// POST /call_center/agent/:ID/skill
	Create(context.Context, *AgentSkill) (*AgentSkill, error)
	// GET /call_center/agent/:ID/skill
	List(context.Context, *ListForItemRequest) (*ListAgentSkill, error)
	// GET /call_center/agent/:ID/skill/:SKILL_ID
	Get(context.Context, *AgentSkillItemReqeust) (*AgentSkill, error)
	// PUT /call_center/agent/:ID/skill/:SKILL_ID
	Update(context.Context, *AgentSkill) (*AgentSkill, error)
	// DELETE /call_center/agent/:ID/skill/:SKILL_ID
	Remove(context.Context, *AgentSkill) (*AgentSkill, error)
}

func RegisterAgentSkillApiServer(s *grpc.Server, srv AgentSkillApiServer) {
	s.RegisterService(&_AgentSkillApi_serviceDesc, srv)
}

func _AgentSkillApi_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentSkillApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentSkillApi/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentSkillApiServer).Create(ctx, req.(*AgentSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentSkillApi_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListForItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentSkillApiServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentSkillApi/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentSkillApiServer).List(ctx, req.(*ListForItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentSkillApi_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentSkillItemReqeust)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentSkillApiServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentSkillApi/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentSkillApiServer).Get(ctx, req.(*AgentSkillItemReqeust))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentSkillApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentSkillApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentSkillApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentSkillApiServer).Update(ctx, req.(*AgentSkill))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentSkillApi_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentSkill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentSkillApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.AgentSkillApi/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentSkillApiServer).Remove(ctx, req.(*AgentSkill))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentSkillApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.AgentSkillApi",
	HandlerType: (*AgentSkillApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AgentSkillApi_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AgentSkillApi_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AgentSkillApi_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AgentSkillApi_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _AgentSkillApi_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent_skill.proto",
}

func init() { proto.RegisterFile("agent_skill.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x41, 0x6b, 0xf2, 0x40,
	0x14, 0xfc, 0x4c, 0x4c, 0x8c, 0x4f, 0xbe, 0x40, 0x17, 0x2a, 0x69, 0x8a, 0x20, 0xa1, 0x07, 0x0f,
	0xad, 0x87, 0xf4, 0x56, 0x4a, 0x41, 0x85, 0x16, 0xc1, 0x53, 0x4a, 0xcf, 0x92, 0xb8, 0x8b, 0x2c,
	0x9a, 0x6c, 0x6a, 0x36, 0x85, 0xfc, 0xa0, 0xfe, 0x8c, 0xfe, 0xb7, 0x92, 0xdd, 0xc4, 0x18, 0x8d,
	0x50, 0x8f, 0x99, 0x79, 0x6f, 0x66, 0x76, 0x78, 0x81, 0x2b, 0x7f, 0x4d, 0x22, 0xbe, 0x4c, 0x36,
	0x74, 0xbb, 0x1d, 0xc7, 0x3b, 0xc6, 0x19, 0xd2, 0x49, 0xb4, 0xa6, 0x11, 0xb1, 0x7b, 0x2b, 0x16,
	0x25, 0x5c, 0x82, 0xce, 0x12, 0xae, 0x27, 0xf9, 0xe4, 0x7b, 0x3e, 0x38, 0xe7, 0x24, 0xf4, 0xc8,
	0x27, 0x49, 0x13, 0x8e, 0x4c, 0x50, 0x28, 0xb6, 0x5a, 0xc3, 0xd6, 0x48, 0xf5, 0x14, 0x8a, 0xd1,
	0x0d, 0x18, 0x52, 0x92, 0x62, 0x4b, 0x11, 0x68, 0x47, 0x7c, 0xcf, 0x31, 0xba, 0x85, 0x2e, 0x66,
	0xa1, 0x4f, 0xa3, 0x9c, 0x53, 0x05, 0x67, 0x48, 0x60, 0x8e, 0x9d, 0x00, 0xcc, 0xba, 0xc1, 0x89,
	0xf2, 0x1d, 0x68, 0x82, 0x14, 0xb2, 0x3d, 0xd7, 0x1c, 0xcb, 0x9c, 0xe3, 0x05, 0x63, 0x9b, 0x34,
	0xf6, 0x24, 0x89, 0x6c, 0x30, 0x66, 0x7e, 0xec, 0xaf, 0x28, 0xcf, 0x84, 0x87, 0xe6, 0xed, 0xbf,
	0x9d, 0x1f, 0x05, 0xa0, 0x32, 0x39, 0x31, 0xa8, 0xe5, 0x53, 0xea, 0xf9, 0xd0, 0x00, 0x60, 0xb5,
	0x23, 0x3e, 0x27, 0x78, 0xe9, 0xf3, 0x22, 0x7d, 0xb7, 0x40, 0x26, 0x1c, 0x3d, 0x54, 0x74, 0x90,
	0x59, 0xed, 0xc6, 0x84, 0xe5, 0xf8, 0x34, 0xcb, 0xd5, 0xd2, 0x18, 0x97, 0x6a, 0x9a, 0x54, 0x2b,
	0x10, 0xa9, 0x56, 0xd2, 0x41, 0x66, 0xe9, 0xcd, 0x6a, 0xc5, 0xc4, 0x34, 0xcb, 0x9b, 0x11, 0xcf,
	0xb2, 0x3a, 0xcd, 0xcd, 0x08, 0xb2, 0xea, 0xcf, 0xf8, 0x6b, 0x7f, 0xdd, 0xa3, 0xfe, 0x5e, 0xc0,
	0x5c, 0xd0, 0x84, 0x1f, 0x54, 0x78, 0x0f, 0x1a, 0xe5, 0x24, 0x4c, 0xac, 0xd6, 0x50, 0x1d, 0xf5,
	0xdc, 0x7e, 0xa9, 0x79, 0x74, 0x2b, 0x72, 0xc8, 0xfd, 0x56, 0xe0, 0x7f, 0xc5, 0x4c, 0x62, 0x8a,
	0x5c, 0xd0, 0x67, 0xa2, 0x14, 0x84, 0x4e, 0x57, 0xed, 0x06, 0xcc, 0xf9, 0x87, 0x9e, 0xa1, 0x9d,
	0xa7, 0x40, 0xf6, 0xfe, 0x01, 0x34, 0xe1, 0xaf, 0x6c, 0x57, 0x5c, 0x65, 0x4a, 0x12, 0x6e, 0xf7,
	0x0f, 0xb9, 0xda, 0xf6, 0x13, 0xa8, 0x6f, 0x84, 0xa3, 0xc1, 0x99, 0xa4, 0xf2, 0xaa, 0xcf, 0x38,
	0xbb, 0xa0, 0x7f, 0x88, 0xd2, 0x2f, 0x48, 0xeb, 0x82, 0xee, 0x91, 0x90, 0x7d, 0x5d, 0xb0, 0x13,
	0xe8, 0xe2, 0x9f, 0x7b, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x56, 0x95, 0x90, 0x9d, 0x9d, 0x03,
	0x00, 0x00,
}
