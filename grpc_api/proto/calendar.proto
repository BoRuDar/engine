syntax = "proto3";

package engine;

import "const.proto";
import "google/api/annotations.proto";

service CalendarService {
    // Create calendar
    rpc CreateCalendar(CreateCalendarRequest) returns (Calendar) {
        option (google.api.http) = {
            post: "/calendars"
            body: "*"
        };
    }
    // List of calendar
    rpc SearchCalendar(SearchCalendarRequest) returns (ListCalendar) {
        option (google.api.http) = {
            get: "/calendars"
        };
    }
    // Calendar item
    rpc ReadCalendar(ReadCalendarRequest) returns (Calendar) {
        option (google.api.http) = {
            get: "/calendars/{id}"
        };
    }
    // Update calendar
    rpc UpdateCalendar(UpdateCalendarRequest) returns (Calendar) {
        option (google.api.http) = {
            put: "/calendars/{id}"
            body: "*"
        };
    }
    // Remove calendar
    rpc DeleteCalendar(DeleteCalendarRequest) returns (Calendar) {
        option (google.api.http) = {
            delete: "/calendars/{id}"
        };
    }

    // List timezones
    rpc SearchTimezones(SearchTimezonesRequest) returns (ListTimezoneResponse) {
        option (google.api.http) = {
            get: "/calendars/timezones"
        };
    }


    // Create AcceptOfDay
    rpc CreateAcceptOfDay(CreateAcceptOfDayRequest) returns (AcceptOfDay) {
        option (google.api.http) = {
            post: "/calendars/{calendar_id}/accepts"
            body: "*"
        };
    }

    // List AcceptOfDay
    rpc SearchAcceptOfDay(AcceptOfDayRequest) returns (ListAcceptOfDay) {
        option (google.api.http) = {
            get: "/calendars/{calendar_id}/accepts"
        };
    }

    // Read AcceptOfDay
    rpc ReadAcceptOfDay(ReadAcceptOfDayRequest) returns (AcceptOfDay) {
        option (google.api.http) = {
            get: "/calendars/{calendar_id}/accepts/{id}"
        };
    }

    // Update AcceptOfDay
    rpc UpdateAcceptOfDay(UpdateAcceptOfDayRequest) returns (AcceptOfDay) {
        option (google.api.http) = {
            put: "/calendars/{calendar_id}/accepts/{id}"
            body: "*"
        };
    }
    // Delete AcceptOfDay
    rpc DeleteAcceptOfDay(DeleteAcceptOfDayRequest) returns (AcceptOfDay) {
        option (google.api.http) = {
            delete: "/calendars/{calendar_id}/accepts/{id}"
        };
    }

    // Create ExceptDate
    rpc CreateExceptDate(CreateExceptDateRequest) returns (ExceptDate) {
        option (google.api.http) = {
            post: "/calendars/{calendar_id}/excepts"
            body: "*"
        };
    }

    // List ExceptDate
    rpc SearchExceptDate(SearchExceptDateRequest) returns (ListExceptDate) {
        option (google.api.http) = {
            get: "/calendars/{calendar_id}/excepts"
        };
    }

    // Read ExceptDate
    rpc ReadExceptDate(ReadExceptDateRequest) returns (ExceptDate) {
        option (google.api.http) = {
            get: "/calendars/{calendar_id}/excepts/{id}"
        };
    }

    // Update ExceptDate
    rpc UpdateExceptDate(UpdateExceptDateRequest) returns (ExceptDate) {
        option (google.api.http) = {
            put: "/calendars/{calendar_id}/excepts/{id}"
            body: "*"
        };
    }
    // Delete ExceptDate
    rpc DeleteExceptDate(DeleteExceptDateRequest) returns (ExceptDate) {
        option (google.api.http) = {
            delete: "/calendars/{calendar_id}/excepts/{id}"
        };
    }
}

message DeleteExceptDateRequest {
    int64 domain_id = 1;
    int64 calendar_id = 2;
    int64 id = 3;
}

message UpdateExceptDateRequest {
    int64 id = 1;
    int64 calendar_id = 2;
    string name = 3;
    int64 date = 4;
    int32 repeat = 5;
    bool disabled = 6;
    int64 domain_id = 7;
}

message SearchExceptDateRequest {
    int64 calendar_id = 1;
    int64 domain_id = 2;
}

message ListExceptDate {
    repeated ExceptDate items = 1;
}

message ReadExceptDateRequest {
    int64 domain_id = 1;
    int64 calendar_id = 2;
    int64 id = 3;
}

message CreateExceptDateRequest {
    int64 domain_id = 1;
    int64 calendar_id = 2;
    string name = 3;
    int64 date = 4;
    int32 repeat = 5;
    bool disabled = 6;
}

message ExceptDate {
    int64 id = 1;
    int64 calendar_id = 2;
    string name = 3;
    int64 date = 4;
    int32 repeat = 5;
    bool disabled = 6;
}

message ListCalendar {
    repeated Calendar items = 1;
}

message Calendar {
    int64 id = 1;
    int64 domain_id = 2;
    int64 created_at = 3;
    Lookup created_by = 4;
    int64 updated_at = 5;
    Lookup updated_by = 6;

    string name = 7;
    int64 start = 8;
    int64 finish = 9;
    Lookup timezone = 10;
    string description = 11;
}

message ReadAcceptOfDayRequest {
    int64 domain_id = 1;
    int64 calendar_id = 2;
    int64 id = 3;
}

message DeleteAcceptOfDayRequest {
    int64 domain_id = 1;
    int64 calendar_id = 2;
    int64 id = 3;
}

message CreateCalendarRequest {
    int64 domain_id = 1;
    string name = 2;
    int64 start = 3;
    int64 finish = 4;
    Lookup timezone = 5;
    string description = 6;
}

message SearchCalendarRequest {
    int64 domain_id = 1;
    int32 size = 2;
    int32 page = 3;
}

message ReadCalendarRequest {
    int64 domain_id = 1;
    int64 id = 2;
}

message DeleteCalendarRequest {
    int64 domain_id = 1;
    int64 id = 2;
}

message UpdateCalendarRequest {
    int64 id = 1;
    int64 domain_id = 2;

    string name = 3;
    int64 start = 4;
    int64 finish = 5;
    Lookup timezone = 6;
    string description = 7;
}

message SearchTimezonesRequest {
    int32 size = 1;
    int32 page = 2;
}

message ListTimezoneResponse {
    repeated Timezone items = 1;
}

message Timezone {
    int64 id = 1;
    string name = 2;
    string offset = 3;
}

message CreateAcceptOfDayRequest {
    int64 calendar_id = 1;
    int64 domain_id = 2;
    int32 week_day = 3;
    int32 start_time_of_day = 4;
    int32 end_time_of_day = 5;
    bool disabled = 6;
}

message UpdateAcceptOfDayRequest {
    int64 calendar_id = 1;
    int64 domain_id = 2;
    int32 week_day = 3;
    int32 start_time_of_day = 4;
    int32 end_time_of_day = 5;
    bool disabled = 6;
    int64 id = 7;
}

message AcceptOfDay {
    int64 id = 1;
    int32 week_day = 3;
    int32 start_time_of_day = 4;
    int32 end_time_of_day = 5;
    bool disabled = 6;
}

message AcceptOfDayRequest {
    int64 calendar_id = 1;
    int64 domain_id = 2;
}

message ListAcceptOfDay {
    repeated AcceptOfDay items = 1;
}
