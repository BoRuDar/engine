syntax = "proto3";

import "const.proto";
import "google/api/annotations.proto";

package engine;

service AgentService {
    // Create Agent
    rpc CreateAgent(CreateAgentRequest) returns (Agent) {
        option (google.api.http) = {
            post: "/call_center/agents"
            body: "*"
        };
    }
    // List of Agent
    rpc SearchAgent(SearchAgentRequest) returns (ListAgent) {
        option (google.api.http) = {
            get: "/call_center/agents"
        };
    }
    // Agent item
    rpc ReadAgent(ReadAgentRequest) returns (Agent) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}"
        };
    }
    // Update Agent
    rpc UpdateAgent(UpdateAgentRequest) returns (Agent) {
        option (google.api.http) = {
            put: "/call_center/agents/{id}"
            body: "*"
        };
    }
    // Remove Agent
    rpc DeleteAgent(DeleteAgentRequest) returns (Agent) {
        option (google.api.http) = {
            delete: "/call_center/agents/{id}"
        };
    }
    // Change agent status
    rpc UpdateAgentStatus(AgentStatusRequest) returns (Response) {
        option (google.api.http) = {
            patch: "/call_center/agents/{id}/status"
            body: "*"
        };
    }

    rpc SearchAgentInTeam(SearchAgentInTeamRequest) returns (ListAgentInTeam) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}/teams"
        };
    }

    rpc SearchAgentInQueue(SearchAgentInQueueRequest) returns (ListAgentInQueue) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}/queues"
        };
    }

//    rpc AddSkill(SkillAgent) returns (SkillAgent) {}
}

message AgentInQueue {
    Lookup queue = 1;
    int32 priority = 2;
    int32 type = 3;
    string strategy = 4;
    bool enabled = 5;
    int32 count_member = 6;
    int32 waiting_member = 7;
    int32 active_member = 8;
}

message ListAgentInQueue {
    repeated AgentInQueue items = 1;
}

message SearchAgentInQueueRequest {
    int64 id = 1;
    int64 domain_id = 2;
    int32 size = 3;
    int32 page = 4;
}

message SearchAgentInTeamRequest {
    int64 id = 1;
    int64 domain_id = 2;
    int32 size = 3;
    int32 page = 4;
}

message AgentInTeam {
    Lookup team = 1;
    string strategy = 2;
}

message ListAgentInTeam {
    repeated AgentInTeam items = 1;
}

message UpdateAgentRequest {
    int64 id = 1;
    int64 domain_id = 2;
    Lookup user = 3;
    string description = 4;
}

message ReadAgentRequest {
    int64 id = 1;
    int64 domain_id = 2;
}
message DeleteAgentRequest {
    int64 id = 1;
    int64 domain_id = 2;
}

message SearchAgentRequest {
    int64 domain_id = 1;
    int32 size = 2;
    int32 page = 3;
}

message CreateAgentRequest {
    int64 domain_id = 1;
    Lookup user = 2;
    string description = 3;
}

message SkillAgent {
    int64 id = 1;
    Lookup skill = 2;
    Lookup agent = 3;
    int32 capacity = 4;
}

message AgentStatusRequest {
    int64 id = 1;
    int64 domain_id = 2;

    enum Status {
        ONLINE = 0;
        OFFLINE = 1;
        PAUSE = 2;
    }

    string status = 3; //FIXME enumerate
}

message Agent {
    int64 id = 1;
    int64 domain_id = 2;
    Lookup user = 3;
    string status = 4;
    string state = 5;
    string description = 7;
}

message ListAgent {
    repeated Agent items = 1;
}
