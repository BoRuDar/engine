syntax = "proto3";

import "const.proto";
import "google/api/annotations.proto";

package engine;

service AgentService {
    // Create Agent
    rpc CreateAgent(CreateAgentRequest) returns (Agent) {
        option (google.api.http) = {
            post: "/call_center/agents"
            body: "*"
        };
    }
    // List of Agent
    rpc SearchAgent(SearchAgentRequest) returns (ListAgent) {
        option (google.api.http) = {
            get: "/call_center/agents"
        };
    }
    // Agent item
    rpc ReadAgent(ReadAgentRequest) returns (Agent) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}"
        };
    }
    // Update Agent
    rpc UpdateAgent(UpdateAgentRequest) returns (Agent) {
        option (google.api.http) = {
            put: "/call_center/agents/{id}"
            body: "*"
        };
    }
    // Remove Agent
    rpc DeleteAgent(DeleteAgentRequest) returns (Agent) {
        option (google.api.http) = {
            delete: "/call_center/agents/{id}"
        };
    }
    // Change agent status
    rpc UpdateAgentStatus(AgentStatusRequest) returns (Response) {
        option (google.api.http) = {
            patch: "/call_center/agents/{id}/status"
            body: "*"
        };
    }

    // List of Agent
    rpc SearchAgentStateHistory(SearchAgentStateHistoryRequest) returns (ListAgentStateHistory) {
        option (google.api.http) = {
            get: "/call_center/agents/{agent_id}/states/history"
        };
    }

    rpc SearchAgentInTeam(SearchAgentInTeamRequest) returns (ListAgentInTeam) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}/teams"
        };
    }

    rpc SearchAgentInQueue(SearchAgentInQueueRequest) returns (ListAgentInQueue) {
        option (google.api.http) = {
            get: "/call_center/agents/{id}/queues"
        };
    }

    rpc SearchAgentInQueueStatistics(SearchAgentInQueueStatisticsRequest) returns (AgentInQueueStatisticsList) {
        option (google.api.http) = {
            get: "/call_center/agents/{agent_id}/statistics/queues"
        };
    }

    rpc SearchAgentCallStatistics(SearchAgentCallStatisticsRequest) returns (AgentCallStatisticsList) {
        option (google.api.http) = {
            get: "/call_center/agents/reports/call"
        };
    }

    // SearchLookupAgentNotExistsUser
    rpc SearchLookupUsersAgentNotExists(SearchLookupUsersAgentNotExistsRequest) returns (ListAgentUser) {
        option (google.api.http) = {
            get: "/call_center/lookups/agents/users"
        };
    }
    
}

message AgentCallStatistics {
    string name = 1;
    int32 count = 2;
    int32 abandoned = 3;
    int32 handles = 4;

    float sum_talk_sec = 5;
    float avg_talk_sec = 6;
    float min_talk_sec = 7;
    float max_talk_sec = 8;

    float sum_hold_sec = 9;
    float avg_hold_sec = 10;
    float min_hold_sec = 11;
    float max_hold_sec = 12;
}

message SearchAgentCallStatisticsRequest {
    int32 page = 1;
    int32 size = 2;

    FilterBetween time = 3;
    repeated int32 agent_id = 4;

    int64 domain_id = 5;

    string q = 6;
    repeated string fields = 7;
    string sort = 8;
}

message AgentCallStatisticsList {
    bool next = 1;
    repeated AgentCallStatistics items = 2;
}

message SearchAgentInQueueStatisticsRequest {
    int64 agent_id = 1;
    int64 domain_id = 2;
}

message AgentInQueueStatistics {
    message AgentInQueueStatisticsItem {
        Lookup bucket = 1;
        Lookup skill = 2;
        int32 member_waiting = 3;
    }

    Lookup queue = 1;
    repeated AgentInQueueStatisticsItem statistics = 2;
}

message AgentInQueueStatisticsList {
    repeated AgentInQueueStatistics items = 1;
}

message ListAgentUser {
    bool next = 1;
    repeated AgentUser items = 2;
}

message AgentUser {
    int64 id = 1;
    string name = 2;
}

message SearchLookupUsersAgentNotExistsRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;

    int64 domain_id = 4;
}

message SearchAgentStateHistoryRequest {
    int64 agent_id = 1;
    int32 page = 2;
    int32 size = 3;
    int64 time_from = 4;
    int64 time_to = 5;
    string q = 6;

    int64 domain_id = 7;
}

message AgentState {
    int64 id = 1;
    int64 joined_at = 2;
    string state = 3;
    int64 timeout_at = 4;
    Lookup queue = 5;
}

message ListAgentStateHistory {
    bool next = 1;
    repeated AgentState items = 2;
}

message AgentInQueue {
    Lookup queue = 1;
    int32 priority = 2;
    int32 type = 3;
    string strategy = 4;
    bool enabled = 5;
    int32 count_member = 6;
    int32 waiting_member = 7;
    int32 active_member = 8;
}

message ListAgentInQueue {
    bool next = 1;
    repeated AgentInQueue items = 2;
}

message SearchAgentInQueueRequest {
    int64 id = 1;
    int32 page = 2;
    int32 size = 3;
    string q = 4;


    int64 domain_id = 5;
}

message SearchAgentInTeamRequest {
    int64 id = 1;
    int32 page = 2;
    int32 size = 3;
    string q = 4;

    int64 domain_id = 5;
}

message AgentInTeam {
    Lookup team = 1;
    string strategy = 2;
}

message ListAgentInTeam {
    bool next = 1;
    repeated AgentInTeam items = 2;
}

message UpdateAgentRequest {
    int64 id = 1;
    Lookup user = 2;
    string description = 3;
    int32 progressive_count = 4;
    int64 domain_id = 5;
}

message ReadAgentRequest {
    int64 id = 1;
    int64 domain_id = 2;
}
message DeleteAgentRequest {
    int64 id = 1;
    int64 domain_id = 2;
}

message SearchAgentRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;

    int64 domain_id = 4;

    repeated string fields = 5;
    string sort = 6;
    repeated string id = 7;
}

message CreateAgentRequest {
    Lookup user = 1;
    string description = 2;
    int32 progressive_count = 3;
    int64 domain_id = 4;
}

message SkillAgent {
    int64 id = 1;
    Lookup skill = 2;
    Lookup agent = 3;
    int32 capacity = 4;
}

message AgentStatusRequest {
    int64 id = 1;

    enum Status {
        ONLINE = 0;
        OFFLINE = 1;
        PAUSE = 2;
    }

    string status = 2; //FIXME enumerate
    bool on_demand = 3;
    int64 domain_id = 4;
}

message AgentChannel {
    string channel = 1;
    string state = 2;
    int64 joined_at = 3;
    bool online = 4;
}

message Agent {
    int64 id = 1;
    Lookup user = 2;
    string status = 3;
    string description = 4;
    int64 last_status_change = 5;
    int32 progressive_count = 6;
    string name = 7;
    repeated AgentChannel channels = 8;
}

message ListAgent {
    bool next = 1;
    repeated Agent items = 2;
}
